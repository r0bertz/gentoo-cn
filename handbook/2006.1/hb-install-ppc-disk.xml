<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/handbook/2006.1/hb-install-ppc-disk.xml,v 1.2 2006/11/02 20:47:57 nightmorph Exp $ -->

<sections>

<version>7.1</version>
<date>2006-11-02</date>

<section>
<title>块设备介绍</title>
<subsection>
<title>块设备</title>
<body>

<p>
我们要好好了解下Gentoo Linux以及普通Linux中有关磁盘方面的知识，这包括Linux文件系统、
分区和块设备。然后，一旦你熟悉了磁盘和文件的方方面面，我们将会指导你设置分区和
文件系统，为你安装Gentoo Linux做好准备。
</p>

<p>
首先，我们介绍<e>块设备</e>。最常见的块设备就是你Linux系统中代表第一个IDE磁盘的
<path>/dev/hda</path>。如果你安装用的是SCSI，FireWire，USB或是SATA磁盘，那么你
的第一个硬盘设备会是<path>/dev/sda</path>。
</p>

<p>
上面介绍的块设备代表磁盘的抽象接口。用户程序可以使用这些块设备来与你的磁盘进行交互，而不用理会你的驱动器到底是IDE、SCSI还是其他的。程序可以把磁盘当作一系列连续的、可随机访问的512字节大小的块来访问。
</p>

</body>
</subsection>
<subsection>
<title>分区</title>
<body>

<p>
尽管在理论上可以使用一整块磁盘来安装你的Linux系统，但是在实际中几乎从不这样做。相反，整个磁盘块设备被分割成更小、更容易管理的块设备。在大多数系统中，这些被称作<e>分区</e>。
</p>

</body>
</subsection>
</section>
<section>
<title>设计分区方案</title>
<subsection>
<title>默认分区方案</title>
<body>

<p>
如果你没有兴趣为你的系统设计分区方案，你可以使用我们在本手册中使用的方案：
</p>

<note>
如果你正在使用一台OldWorld架构的机器，你需要保持MacOS可用。
这儿的布局是假设MacOS被安装于一块独立的磁盘上的。
</note>

<table>
<tr>
  <th>NewWorld架构分区</th>
  <th>OldWorld架构分区</th>
  <th>Pegasos架构分区</th>
  <th>RS/6000架构分区</th>
  <th>文件系统</th>
  <th>大小</th>
  <th>描述</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>（不适用）</ti>
  <ti>（不适用）</ti>
  <ti>（分区表）</ti>
  <ti>32k</ti>
  <ti>Apple_partition_map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>（不需要）</ti>
  <ti>（不适用）</ti>
  <ti>（不适用）</ti>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti>（不适用）</ti>
  <ti>（不适用）</ti>
  <ti>（不适用）</ti>
  <ti><path>/dev/sda1</path></ti>
  <ti>(PReP Boot)</ti>
  <ti>800k</ti>
  <ti>类型 0x41</ti>
</tr>
<tr>
  <ti>（不适用）</ti>
  <ti><path>/dev/hda2</path>（如果使用quik）</ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>（不适用）</ti>
  <ti>ext2</ti>
  <ti>32MB</ti>
  <ti>启动分区</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda2</path> (<path>/dev/hda3</path>如果使用quik)</ti>
  <ti><path>/dev/hda2</path></ti>
  <ti><path>/dev/sda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>交换分区，类型 0x82</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti><path>/dev/hda3</path> (<path>/dev/hda4</path>如果使用quik)</ti>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/sda3</path></ti>
  <ti>ext3, xfs</ti>
  <ti>磁盘剩余空间</ti>
  <ti>root分区，类型 0x83</ti>
</tr>
</table>

<note>
有些分区命名为：<path>Apple_Driver63，Apple_Driver_ATA，Apple_FWDriver，
Apple_Driver_IOKit，Apple_Patches</path>。如果你计划不再使用MacOS 9你可以将它们
删除，因为MacOS X和Linux都不需要它们。你可以使用parted来删除这些不需要的分区或
初始化分区表来删除整个磁盘。
</note>

<warn>
<c>parted</c>能够重新划分包括HFS+在内的分区的大小+。不幸的是，它不能够够重新
划分HFS+日志文件系统，所以在重新定义大小前，请在Mac OS X中关闭掉日志记录功能。
牢记任何重划分大小的行为都是有危险的，所以后果自负！确保在你重新划分大小前要备
份好你的数据。
</warn>

<p>
如果你对知道一个分区究竟应该多大或者你究竟需要多个个分区感兴趣，请继续阅读。
否则，请跳转到<uri link="#mac-fdisk">默认：使用mac-fdisk（Apple）为你的磁盘
分区</uri>或者<uri link="#parted">备选：使用parted(IBM/Pegasos)为你的磁盘
分区</uri>。
</p>

</body>
</subsection>
<subsection>
<title>多少和多大？</title>
<body>

<p>
分区的数目主要根据你的系统环境来决定。例如，如果你有很多用户，你可能更希望把你的
<path>/home</path>目录独立出来，因为这样做可以增加安全性，备份起来也更容易。如果
你安装Gentoo用来做邮件服务器，你的<path>/var</path>目录应该独立出来，因为邮件都
存储在<path>/var</path>目录中。选择一个好的文件系统将最大限度地提高你的系统性
能。游戏服务器应该把<path>/opt</path>目录独立出来，因为大多数游戏服务端软件都安
装在那。理由也与<path>/home</path>目录类似：安全与备份。你一定要使<path>/usr
</path>目录保持足够大：因为它将不仅包含大部分应用程序，而且Portage树本身就需要
大约500M空间，这还不包括存储在其中的各种源代码包。
</p>

<p>
正如你所看到的，这完全取决于你想要达到什么目的。独立的分区或卷有以下优点：
</p>

<ul>
<li>
  你可以为每一个分区或卷选择最佳性能的文件系统
</li>
<li>
  如果一个有问题的工具不停地向一个分区或卷写文件，也不会把你整个系统的可用空间
  都用完
</li>
<li>
  如果需要，可以减少文件系统检测的时间，因为多个检测可以并行的进行（尽管这个优势
  在多磁盘系统上比多分区系统上更为明显）
</li>
<li>
  通过对一些分区的进行只读、nosuid（忽略setuid位）、noexec（忽略可执行位）等方式
  挂载，安全性会大大增强
</li>
</ul>

<p>
然而，多分区系统有一大缺点：如果配置的不合理，可能导致系统中一个分区有很大的空闲
空间，而另一个没有空闲空间了。SCSI和SATA还有15个分区的限制。
</p>

</body>
</subsection>
</section>
<section id="mac-fdisk">
<title>默认：使用mac-fdisk（Apple）为你的磁盘分区</title>
<body>

<p>
现在，使用<c>mac-fdisk</c>创建你的分区：
</p>

<pre caption="启动mac-fdisk">
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
首先删除你事先清空的分区为你Linux分区预留空间。在<c>mac-fdisk</c>中使用<c>d</c>
来删除这些分区。它会询问你需要删除的分区号码。通常在NewWorld机器上的第一个分区
（Apple_partition_map）是不能被删除的。
</p>

<p>
其次，使用<c>b</c>来创建一个<e>Apple_Bootstrap</e>分区。它会询问你从哪块开始。
键入你第一个空余分区的号码，然后紧跟一个<c>p</c>。比如在这儿，是<c>2p</c>。
</p>

<note>
这个分区并<e>不</e>是一个<path>/boot</path>分区。它根本不被Linux所用；你不需要
在上面放置任何文件系统以及永远不用挂载它。Apple用户并不需要一个额外的<path>/boot</path>分区。
</note>

<p>
现在按<c>c</c>创建一个交换分区。<c>mac-fdisk</c>将再一次询问你想要从那块开始你
的分区。因为我们之前已经使用了<c>2</c>来创建Apple_Bootstrap分区，因此你现在需要
键入<c>3p</c>。当你被询问到大小的时候，输入<c>512M</c>（或者你所需要的任意大小
———尽管512M是我们推荐的）。当被询问到名字的时候，输入<c>swap</c>（强制）。
</p>

<p>
键入<c>c</c>，来创建root分区，紧跟<c>4p</c>用以选择root分区从哪块开始。当被询问
到大小的时候，再次输入<c>4p</c>。<c>mac-fdisk</c>会将这种行为解释成“使用所有的
空余空间”。当被问到名字的时候，键入<c>root</c>（强制）。
</p>

<p>
完成分区，键入<c>w</c>将分区写入到磁盘上，键入<c>q</c>退出<c>mac-fdisk</c>。
</p>

<note>
确保万事具备，你可以再次运行mac-fdisk来检测所有的分区是否在那儿。如果你没有看到
任何你创建的分区，或者你所做的改动，在mac-fdisk中你需要按“i”来重新初始化你的
分区。注意这将重新创建分区表并移除所有的分区。
</note>

<p>
现在你的分区已经创建好了，请继续阅读<uri link="#filesystems">创建文件系统</uri>。
</p>

</body>
</section>
<section id="parted">
<title>使用parted（特别是Pegasos）为你的磁盘分区</title>
<body>

<p>
<c>parted</c>，一个分区编辑器，能够操作Mac OS和Mac OS X使用的HFS+分区。通过
这个工具你可以重新划分Mac-分区的大小以及为你的Linux分区创建空间。不过以下的
例子只是描述了Pegasos机器的分区。
</p>

<p>
启动<c>parted</c>来开始分区：
</p>

<pre caption="启动parted">
# <i>parted /dev/hda</i>
</pre>

<p>
如果磁盘没有被分过区，运行<c>mklabel amiga</c>为你的磁盘创建一个新的disklabel。
</p>

<p>
在parted中你可以在任何时候键入<c>print</c>来显示目前的分区表。如果在任何时候你
改变了主意或犯了错误，你可以键入<c>Ctrl-c</c>来退出parted。
</p>

<p>
如果你准备在你的Pegasos机器上安装MorphOS，你在磁盘的最开始创建一个名为
“BIO”（BI数字零）的affs1文件系统。32M已经足够用于存放MorphOS内核。如果你拥有
一台Pegasos I或者想要使用reiserfs或者xfs文件系统，你同样需要将你的Linux内核存放
到这个分区上（Pegasos II只能从ext2/ext3或affs1分区启动）。运行<c>mkpart
primary affs1 START END</c>来创建一个分区，在这儿<c>START</c>和<c>END</c>需要被
替换成以兆为单位的区间（比如：<c>0 32</c>会创建一个从0M开始至32M结束的32M大小的分区。
</p>

<p>
你需要为Linux创建两个分区，一个为你的程序文件等准备的root文件系统，还有一个交换
分区。为了创建root文件系统，你必须首先决定使用哪个文件系统。可供选择的有ext2、
ext3、reiserfs和xfs。除非你知道你正在做什么，否则请使用ext3。运行<c>mkpart
primary ext3 START END</c>来创建一个ext3分区。再次用以兆为单位的起始
标记替换<c>START</c>和<c>END</c>。
</p>

<p>
通常我们建议创建一个两倍于你内存容量大小的交换分区。除非你想在同一时刻运行大量
的程序，否则你可能会使用一个比较小的交换分区（尽管我们推荐至少512M）。运行<c>mkpart
primary linux-swap START END</c>来创建交换分区。
</p>

<p>
写下分区从设备号，因为在安装过程中需要它们。运行<c>print</c>来显示这些从设备号。你的磁盘
可以通过<path>/dev/hdaX</path>方式来存取，其中X被替换为分区从设备号。
</p>

<p>
当你在parted中完成了操作之后，运行<c>quit</c>退出。
</p>

</body>
</section>
<section id="filesystems">
<title>创建文件系统</title>
<subsection>
<title>介绍</title>
<body>

<p>
至此你的分区都创建好了，是时候在上面放置文件系统了。如果你不介意选择什么文件系
统而且对本手册中默认使用的文件系统满意，请继续看<uri
  link="#filesystems-apply">将文件系统应用到分区上</uri>。
否则就继续阅读以了解可用的文件系统...
</p>

</body>
</subsection>
<subsection>
<title>文件系统？</title>
<body>

<p>
可用的文件系统有不少。ext2、ext3、ReiserFS和XFS已经被证明可在PPC架构上稳定运行。
</p>

<p>
<b>ext2</b>是经考验证明可靠的Linux文件系统，但是没有元数据日志，这意味这在启动
系统时的ext2文件系统的日常检查相当耗时。现在相当一部分的新一代的日志文件系统可供
选择，它们可以非常迅速检查一致性，并且比那些非日志文件系统更受欢迎。当你启动系统
碰巧遇到文件系统状态不一致时，日志文件系统不会在那里耽搁很长时间。
</p>

<p>
<b>ext3</b>是ext2文件系统的带日志版本，提供了元数据日志模式，目的是为了快速恢复数据，此外还提供了其他的增强日志模式，如完整数据日志模式和有序数据日志模式。它使用了哈希B*-树索引，在几乎所有的情况下都能保持高性能。目前，ext3是非常好且可靠的文件系统。
</p>

<p>
<b>ReiserFS</b>是基于B*-树的文件系统，它有着非常全面的性能，并且在处理小文件（小于4k的文件）上远远胜过ext2和ext3，通常是它们的10倍至15倍。ReiserFS是一种适用范围极其广泛且具有元数据日志的文件系统。它坚固且不仅可以用于一般用途的文件系统，而且还适用于极端情况下，如创建大文件系统、超大型文件和包含无数小文件的目录。
</p>

<p>
<b>XFS</b>是一种带元数据日志的文件系统，它有一个健壮的特性集，并且对可伸缩性进行了优化。我们仅推荐在带有高端SCSI设备或光纤通道存储和不间断电源供电的Linux系统上使用这个文件系统。因为XFS会大量地在内存中缓存正在传输的数据，如果系统意外关机，那些设计不合理的程序（写入文件到磁盘时未做足准备措施的程序，而且这种程序相当多）可能会丢失大量数据。
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>应用文件系统到分区上</title>
<body>

<p>
要在分区或卷上创建文件系统，对于每个可能的文件系统都有专门的工具：
</p>

<table>
<tr>
  <th>文件系统</th>
  <th>创建命令</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mkfs.ext2</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mkfs.ext3</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkfs.reiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
</table>

<p>
例如，将root分区（本例中的<path>/dev/hda4</path>）设为ext3，你应该使用：
</p>

<pre caption="应用一个文件系统到分区上">
# <i>mkfs.ext3 /dev/hda4</i>
</pre>

<p>
现在在你新建的分区（或逻辑卷）上创建文件系统。
</p>

<note>
在Pegasos II上，你的存放内核的分区必须是ext2/ext3或affs1。NewWorld架构的机器
能够从任何ext2、ext3、XFS、ReiserFS甚至是HFS/HFS+文件系统上启动。在使用BootX
启动的OldWorld机器上，内核需要放置到HFS分区上，不过这会在你配置你的引导程序时
完成。
</note>

</body>
</subsection>
<subsection>
<title>激活交换分区</title>
<body>

<p>
<c>mkswap</c>是用于初始化交换分区的命令：
</p>

<pre caption="创建一个交换分区签名">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
要激活交换分区，使用<c>swapon</c>：
</p>

<pre caption="激活交换分区">
# <i>swapon /dev/hda3</i>
</pre>

<p>
现在创建和激活交换分区。
</p>

</body>
</subsection>
</section>
<section>
<title>挂载</title>
<body>

<p>
现在你的分区已经初始化好，而且也有了文件系统，是时候来挂载这些分区了。使用
<c>mount</c>命令。这里有个例子，我们来挂载root分区：
</p>

<pre caption="挂载分区">
# <i>mount /dev/hda4 /mnt/gentoo</i>
</pre>

<note>
如果你希望<path>/tmp</path>目录在一个独立的分区上，确保在挂载之后修改它的权
限：<c>chmod 1777 /mnt/gentoo/tmp</c>。这同样适用于<path>/var/tmp</path>目录。
</note>

<p>
我们还需要在<path>/proc</path>目录上挂载proc文件系统（内核的虚拟接口）。但是，
我们首先需要把我们的文件放到分区上。
</p>

<p>
请继续阅读<uri link="?part=1&amp;chap=5">安装Gentoo安装文件</uri>。
</p>

</body>
</section>
</sections>
