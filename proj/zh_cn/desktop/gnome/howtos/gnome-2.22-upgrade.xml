<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">


<!-- $Header$ -->
<!-- English CVS version: 1.14 -->

<guide link="/proj/zh_cn/desktop/gnome/howtos/gnome-2.22-upgrade.xml" lang="zh_cn" disclaimer="draft">
<title>Gnome 2.22升级指南</title>

<author title="作者">
  <mail link="remi"/>
</author>
<author title="作者">
  <mail link="leio"/>
</author>
<author title="编辑">
  <mail link="nightmorph"/>
</author>
<author title="译者">
  <mail link="guanqun.lu@gmail.com">陆冠群</mail>
</author>

<abstract>
这是一份指导你如何从GNOME 2.20.x升级到GNOME 2.22.x的指南。
</abstract>



<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.3</version>
<date>2008-06-20</date>

<chapter>
<title>改动</title>
<section>
<title>自动挂载可移动的媒介</title>
<body>

<p>
自动挂载在Gnome
2.22中做了一些重大的改动。现在，自动挂载由Nautilus来处理而不是<c>gnome-base/gnome-volume-manager</c>。当然，<c>gnome-volume-manager</c>仍然可以用来侦测新的硬件，比如照相机。
</p>

<p>
由于这个改动，对于想保持以前行为的用户，在<c>gnome-volume-manager</c>上我们提供了一个<c>automount</c>的use标记。对于以前在非Gnome桌面情况下启动<c>gnome-volume-manager</c>的用户，我们强烈建议他们启用这个use标记。而相反，我们强烈建议Gnome用户不要启用这个use标记，因为这会和Nautilus出现冲突。
</p>

</body>
</section>
<section>
<title>Seahorse密钥管理器</title>
<body>

<p>
从2.22开始，Seahorse(<c>app-crypt/seahorse</c>)就是官方的密钥和密码管理器，用来替代GNOME Keyring
Manager(<c>gnome-extra/gnome-keyring-manager</c>)。它可以处理GPG和SSH的密钥，并且可以用来管理存储在你的GNOME
keyring中的密码。
</p>

<p>
如何在完成GNOME升级之后你很满意Seahorse的表现，你可以考虑卸载<c>gnome-keyring-manager</c>。
</p>

</body>
</section>
<section>
<title>PAM和GNOME Keyring的整合</title>
<body>

<p>
从GNOME 2.20开始，GNOME
Keyring(<c>gnome-base/gnome-keyring</c>)开始提供PAM模块(<path>pam_gnome_keyring.so</path>)。它可以在你登录的时候自动将你的keyring去锁，这样你就省去了输入两次密码的麻烦。
</p>

<p>
在GNOME
2.22中，这个特性现在变得更加可配置，感谢<c>sys-auth/pambase</c>，它现在有一个<c>gnome-keyring</c>的use标记。当这个标记启用的时候，在<path>/etc/pam.d/</path>下的PAM配置文件会自动地将<path>pam_keyring.so</path>插入到正确的位置。只要记得在安装<c>pambase</c>之后使用<c>dispatch-conf</c>或者其他类似的工具来更新那些文件。
</p>

</body>
</section>
<section>
<title>其他的改动</title>
<body>

<p>
请查看<uri link="http://library.gnome.org/misc/release-notes/2.22/">GNOME 2.22
Release Notes</uri>来获得在这个重大的发布中还有哪些新的特性。
</p>

</body>
</section>
</chapter>

<chapter>
<title>疑难问题解答</title>
<section>
<title>升级到Python 2.5</title>
<body>

<p>
在升级到GNOME 2.22之前，请确保你<e>仅</e>有<c>dev-lang/python-2.5*</c>并且你的系统已经完全更新。
</p>

<pre caption="升级python">
# <i>emerge -av dev-lang/python:2.5</i>
# <i>python-updater</i>
# <i>emerge -C dev-lang/python:2.4</i>
</pre>

<warn>
如果你提交和Python相关的bug，并且你仍然在使用Python
2.4，我们<c>将</c>要求你升级到2.5。GNOME团队<e>不</e>对基于Python 2.4的GNOME 2.22提供支持。
</warn>

</body>
</section>
<section>
<title>被阻止的软件包</title>
<body>

<p>
在GNOME
2.22中，一些软件包被分割成两个独立的软件包，用以允许其他的应用程序来使用以前的内部库。比如在<c>totem</c>中的播放列表的分析库现在被分割出来，成为<c>dev-libs/totem-pl-parser</c>，所以<c>rhythmbox</c>可以依赖之，而不再需要依赖整个<c>totem</c>。
</p>

<p>
这会产生一些新的相互阻止的情况，用以防止软件包之间的文件冲突。为了解决这个问题，请依照在<uri
link="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?full=1#blocked">handbook</uri>中Portage部分说明的合适的步骤。一般来说，暂时删除发生冲突的软件包，然后继续，最后通过元软件包或者其他依赖于它的GNOME部分来安装刚才删除的软件包。
</p>

</body>
</section>
<section>
<title>GNOME不再作为GDM中的一个session选项</title>
<body>

<p>
GDM使用目录<path>/usr/share/xsessions/*</path>下面的文件来决定用户已经安装的桌面环境，并同时出现在"Sessions"菜单中可供选择。
</p>

<p>
GNOME的文件现在由<c>gnome-base/gnome-session-2.22</c>来提供，而不是<c>gnome-base/gdm</c>。由于这个原因，存在一些为了防止文件冲突而发生的阻止的情况，而这种阻止的情况可能会导致session文件丢失。
</p>

<p>
唯一有可能出问题的是<c>gnome-session</c>在为了解决GDM升级的阻止情况而被卸载之后没有升级到2.22。表现出来的状况将是在GDM的"Session"菜单中缺少GNOME的选项，在这种情况下，请检查你安装了<c>gnome-session-2.22.0</c>或者更高的版本。
</p>

<p>
注意这个问题不会出现在使用<c>gnome-base/gnome</c>元软件包的用户中，因为它会再次从<c>gnome-session</c>软件包中提取相应的文件。
</p>

</body>
</section>
</chapter>
</guide>
