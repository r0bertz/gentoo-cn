<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/xsl/guide.xsl" ?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/doc-tipsntricks.xml,v 1.4 2004/04/04 15:07:02 neysx Exp $ -->

<guide link="/doc/zh_cn/doc-tipsntricks.xml">
<title>文档开发技巧</title>
<author title="Author">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
    <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Translator">
     <mail link="joanphan@gmail.com">Hans Joanphan</mail>
</author>

<abstract>
一些使Gentoo文档开发者工作起来更简单（也可能更糟）的技巧。
</abstract>

<license/>

<version>0.8</version>
<date>2004年3月30日</date>

<chapter>
<title>设置本地环境</title>
<section>
<title>投稿人的本地环境设置</title>
<body>

<p>
创建一个只用来开发文档的文件夹。作为一个例子，我们取用<path>~/work/gentoo/doc</path>。在这个文件夹里，创建一个用来放置最新英文文档的文件夹（如<path>en/</path>）。
</p>

<p>
下载最新的英文文档包：
</p>

<pre caption="下载最新的文档">
# <i>wget http://www.gentoo.org/dyn/doc-snapshots/docs-latest-en.tar.bz2</i>
</pre>

<p>
解开文档到<path>en/</path>文件夹里。现在你就有了最新英文文档的一个快照了。每次你想更新你的快照，你可以再下载一次这个包，但是，你也可以通过浏览文档时在地址前加上<path>?passthru=1</path>来下载。如：
</p>

<pre caption="更新英文文档">
# <i>wget http://www.gentoo.org/doc/en/alsa-guide.xml?passthru=1 -O alsa-guide.xml</i>
</pre>

<p>
如果你要帮助翻译文档，创建一个文件夹用来放置你的语言的文档翻译。
</p>

<pre caption="下载你的语言的文档的快照">
# <i>mkdir </i><comment>${LANG}</comment>
# <i>cd </i><comment>${LANG}</comment>
# <i>wget http://www.gentoo.org/dyn/doc-snapshots/docs-latest-</i><comment>${LANG}</comment><i>.tar.bz2</i>
# <i>tar xvjf docs-latest-*.tar.bz2</i>
</pre>

<p>
如果你更新一个文档，都要先把你的文档从<path>${LANG}/</path>拷贝到根目录（<path>~/work/gentoo/doc</path>），再调整这个拷贝的版本。你可以通过创建一个补丁来保证你的原始版本。
</p>

<pre caption="为一个更新创建补丁">
# <i>diff -uNt </i><comment>${LANG}</comment><i>/alsa-guide.xml alsa-guide.xml</i> > alsa-guide.diff
</pre>

</body>
</section>
<section>
<title>在线CVS仓库</title>
<body>

<p>
你可以要求我们的<uri link="/cgi/bin/viewcvs.cgi">在线CVS仓库</uri>来提供不同版本间的的不同。主要的英文仓库还是<uri link="/cgi-bin/viewcvs.cgi/gentoo/xml/htdocs/doc/en/?sortby=date">很充足的</uri>。并且，这个在线仓库每半个小时更新一次。
</p>

</body>
</section>
<section>
<title>给开发者的本地仓库</title>
<body>

<p>
创建一个只用于Gentoo的工作文件夹，如<path>~/work/gentoo/doc</path>。然后创建一个子文件夹为<path>cvs/</path>，在这里你可以放置CVS的快照：
</p>

<pre caption="获得CVS的快照">
# <i>mkdir cvs; cd cvs/</i>
# <i>export CVSROOT=</i><comment>&lt;your nick&gt;</comment><i>@cvs.gentoo.org:/home/cvsroot</i>
# <i>cvs co doc</i>
</pre>

<p>
更新CVS快照，在文件夹<path>cvs/doc</path>中运行<c>cvs update -dP</c>即可。
</p>

</body>
</section>
</chapter>
<chapter>
<title>测试GuideXML</title>
<section>
<title>测试环境设置</title>
<body>

<p>
首先创建文件夹<path>test/</path>来放置<path>guide.dtd</path>，<path>main.css</path>和一些图片。
</p>

<pre caption="创建测试环境">
# <i>mkdir test</i>
# <i>cd test</i>
# <i>mkdir dtd css images</i>
# <i>wget -P dtd/ http://www.gentoo.org/dtd/guide.dtd</i>
# <i>wget -P dtd/ http://www.gentoo.org/dtd/book.dtd</i>
# <i>wget -P css/ http://www.gentoo.org/css/main.css</i>
# <i>wget -P images/ http://www.gentoo.org/images/gbot-s.gif \
  http://www.gentoo.org/images/gridtest.gif \
  http://www.gentoo.org/images/gtop-s.jpg \
  http://www.gentoo.org/images/line.gif \
  http://www.gentoo.org/images/netraverse-gentoo.gif</i>
</pre>

<p>
现在可以下载在<uri link="http://dev.gentoo.org/~swift/local/guide.xsl">SwifT的工作站</uri>里的<path>guide.xsl</path>的特殊版本。这个版本是调整后用来在本地系统将GuideXML转换为XML的。
</p>

<pre caption="下载 guide.xsl">
# <i>wget http://dev.gentoo.org/~swift/local/guide.xsl</i>
</pre>

<p>
最后，编辑 <path>/etc/xml/catalog</path>，增加下面几行：
</p>

<pre caption="/etc/xml/catalog addendum">
&lt;rewriteURI uriStartString="/dtd" rewritePrefix="<i>/path/to/dtddir</i>"/&gt;
</pre>

<p>
当然要将 <c>/path/to/dtddir</c> 替换为你将下载的 <path>guide.dtd</path> 和 <path>book.dtd</path>放置的地方。
</p>

</body>
</section>
<section>
<title>测试一个Gentoo向导文档</title>
<body>

<p>
为测试一个Gentoo向导文档，首先检验他是否正确使用XML:
</p>

<pre caption="用xmllint来测试文档">
# <i>xmllint --valid --noout alsa-guide.xml</i>
</pre>

<p>
如果 <c>xmllint</c>没有返回任何信息，那么这个文件是正确的（起码是正确的xml语句）。接着，你需要将他转还为HTML格式。<c>xsltproc</c>就是我们所需要的工具。
</p>

<pre caption="转还为HTML格式">
# <i>xsltproc --novalid test/guide.xsl alsa-guide.xml &gt; test/alsa-guide.html</i>
</pre>

<p>
如果没有显示错误，你将可以将你的浏览器指向<uri>file:///home/user/work/gentoo/doc/test/alsa-guide.html</uri>来看看所生成的文档。如果不行，修改文档，一直到能成功为止。
</p>

</body>
</section>
<section>
<title>测试Gentoo的手册</title>
<body>

<p>
Gentoo的手册分为了几个段落。在一个特定的段落中生成，你必须同时使用文件<path>handbook-x86.xml</path>和其所需的文件<path>hb-</path>（如<path>hb-install-about.xml</path>）。然后你必须给<c>xlstproc</c>同样的参数，用来浏览在线手册，也就是<c>part</c>和<c>chap</c>。举个例子说，来测试<path>hb-install-about.xml</path>:
</p>

<pre caption="测试hb-install-about.xml">
# <i>xmllint --valid --noout handbook-x86.xml</i>
# <i>xmllint --valid --noout hb-install-about.xml</i>
# <i>xsltproc --stringparam part 1 --stringparam chap 1 test/guide.xsl handbook-x86.xml &gt; test/hb-install-about.html</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>使用axkit设置</title>
<section>
<body>

<p>
一些文档开发者喜欢axkit设置，这是同<uri>http://www.gentoo.org</uri>类似的设置。这里有一些帮助你设定一个类似设置的建议。
</p>

<warn>
好像axkit比较敏感他所用的软件抱得版本，特别是libxml2软件包的。下面的配置文件是经过测试可以工作的。其他的一些组合则可能出错。
</warn>

<p>
首先，安装所学要的软件包：
</p>

<pre caption="安装所需软件的特定版本">
<comment>(测试软件包是否在portage中存在)</comment>
# <i>emerge -vp =libxml2-2.5.8 =libxslt-1.0.33 =AxKit-1.6.1 =XML-XPath-1.13 \
 =XML-LibXML-1.54-r1 =XML-LibXSLT-1.53 =XML-Parser-2.31-r1 =apache-1.3.29-r1</i>

These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild   R   ] dev-libs/libxml2-2.5.8  -ipv6 +python +readline  0 kB 
[ebuild   R   ] dev-libs/libxslt-1.0.33  +python  0 kB 
[ebuild   R   ] dev-perl/AxKit-1.6.1  +gnome  0 kB 
[ebuild   R   ] dev-perl/XML-XPath-1.13   0 kB 
[ebuild   R   ] dev-perl/XML-LibXML-1.54-r1   0 kB 
[ebuild   R   ] dev-perl/XML-LibXSLT-1.53   0 kB 
[ebuild   R   ] dev-perl/XML-Parser-2.31-r1   0 kB
[ebuild   R   ] net-www/apache-1.3.29-r1  +pam  0 kB

<comment>(安装软件包)</comment>
# <i>emerge -v =libxml2-2.5.8 =libxslt-1.0.33 =AxKit-1.6.1 =XML-XPath-1.13 \
 =XML-LibXML-1.54-r1 =XML-LibXSLT-1.53 =XML-Parser-2.31-r1 =apache-1.3.29-r1</i>
</pre>

<p>
然后，编辑下面这些配置文件：
</p>

<pre caption="/etc/apache/conf/commonapache.conf">
<comment>(内部)</comment>
&lt;IfModule mod_dir.c&gt;
  <comment>(Add index.xml to the list)</comment>
  DirectoryIndex index.xml index.html index.php index.php3 index.shtml index.cgi index.pl index.htm Default.htm default.htm
&lt;/IfModule&gt;

<comment>(增加下面几行)</comment>
&lt;IfDefine PERL&gt;
  LoadModule perl_module extramodules/libperl.so
#  AddModule mod_perl.c
  PerlModule AxKit
  SetHandler perl-script
  PerlHandler Apache::AxKit::StyleChooser::PathInfo AxKit
  AddHandler axkit .xml .xsp
  AxAddPlugin Apache::AxKit::StyleChooser::QueryString
  AxAddXSPTaglib AxKit::XSP::Util
  AxAddXSPTaglib AxKit::XSP::IfParam
  AxAddXSPTaglib AxKit::XSP::Param
  AxAddStyleMap application/x-xsp Apache::AxKit::Language::XSP
  AxAddStyleMap text/xsl Apache::AxKit::Language::LibXSLT
  &lt;AxStyleName "#default"&gt;
    AxAddProcessor text/xsl /xsl/guide.xsl
  &lt;/AxStyleName&gt;
  &lt;AxStyleName printable&gt;
    AxAddProcessor text/xsl /xsl/guide-print.xsl
  &lt;/AxStyleName&gt;
&lt;/IfDefine&gt;

<comment>(内部)</comment>
&lt;IfModule mod_alias.c&gt;
    Alias /icons/ /var/www/localhost/icons/
<comment>(注释掉下面一行)</comment>
    #Alias /doc /usr/share/doc
</pre>

<pre caption="/etc/conf.d/apache">
<comment>(将 -D PERL 添加到选项中)</comment>
APACHE_OPTS="-D PERL"
</pre>

<p>
然后，将文档文件，包括DTD文档和样式表到<path>/var/www/localhost/htdocs/</path>。你需要有文件夹<path>css/</path>，<path>doc/</path>，<path>dtd/</path>，<path>images/</path>和<path>xsl</path>。Gentoo的开发者可以拷贝或链接到他们的本地CVS拷贝。其他的贡献者将需要从我们的<uri
link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/xml/htdocs/?root=gentoo">viewCVS</uri>界面中下载文件。
</p>

<p>
现在就剩下去启动你的apache服务器了：
</p>

<pre caption="Launching apache">
# <i>/etc/init.d/apache start</i>
# <comment>(如果你要在启动时自动启动服务器，将这添加到你的运行级别中)</comment>
# <i>rc-update add apache default</i>
</pre>

<p>
将你的浏览器指向 <uri>http://your_server/doc/en/</uri>，如果你将axkit装在你的工作台中，只需要指向<uri>http://localhost/doc/en/</uri>。你可以在<path>/var/log/apache/access_log</path>中查看访问记录和在<path>/var/log/apache/error_log</path>查看错误报告。
</p>

<note>
Mozilla用户在使用本地服务器时，可能需要在<uri>about:config</uri>中将<c>keyword.enabled</c>设定为<c>false</c>。
</note>

</body>
</section>

</chapter>
</guide>
