<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/handbook/hb-install-x86-bootloader.xml,v 1.7 2004/05/09 11:06:58 swift Exp $ -->

<sections>
<section>
<title>作出你的选择</title>
<subsection>
<title>介绍</title>
<body>

<p>
既然你的内核已经配置和编译好，必须的系统配置文件也已经正确的写好，该到为开机启动linux内核安装一个程序。这样一个程序叫做<e>启动程序</e>。对于x86架构来说，Gentoo Linux提供了<uri link="#grub">GRUB</uri>和<uri link="#lilo">LILO</uri>。但是在我们安装其中之一时，我们首先告诉你怎样配置framebuffer（以防你需要它）。有了framebuffer，你可以在（有限的）有图形化性能（如使用Gentoo提供的漂亮的bootsplash图像）下运行Linux命令行。
</p>

</body>
</subsection>
<subsection>
<title>可选：Framebuffer</title>
<body>

<p>
<e>如果</e>你已经为你的内核配置好framebuffer支持（或者你使用<c>genkernel</c>的默认内核配置），如果要使用framebuffer，你还必须添加一个<c>vga</c>语句到你的启动程序配置文件。下面这个表给出了你可以使用的<c>vga</c>值。在这个配置例子中，我们使用<e>800x600 @ 16bpp</e>，也就是<e>788</e>。
</p>

<table>
<tr>
  <ti></ti><th>640x480</th><th>800x600</th><th>1024x768</th><th>1280x1024</th>
</tr>
<tr>
  <th>8 bpp</th><ti>769</ti><ti>771</ti><ti>773</ti><ti>775</ti>
</tr>
<tr>
  <th>16 bpp</th><ti>785</ti><ti>788</ti><ti>791</ti><ti>794</ti>
</tr>
<tr>
  <th>32 bpp</th><ti>786</ti><ti>789</ti><ti>792</ti><ti>795</ti>
</tr>
</table>

<p>
记住（或者写下）你需要的值，后面一会儿你就会需要它。
</p>

<p>
现在从安装<uri link="#grub">GRUB</uri><e>或者</e><uri link="#lilo">LILO</uri>继续。
</p>

</body>
</subsection>
</section>
<section id="grub">
<title>默认：使用GRUB</title>
<subsection>
<title>理解GRUB的专有名词</title>
<body>

<p>
理解GRUB最严格的一部分是熟悉GRUB怎样引用磁盘驱动器和分区。你的Linux分区<path>/dev/hda1</path>在GRUB下叫做<path>(hd0,0)</path>。注意，在<path>hd0,0</path>周围的括号是必须的。
</p>

<p>
磁盘驱动器是从0开始计数而不是“a”，分区是从0开始计数而不是1。我们也注意到hd设备，只是算上硬盘，而不包括atapi-ide设备，如CDROM光驱和刻录机。同样的结构也适用于scsi驱动器。（一般情况下，它们的计数会比ide设备高，除非在bios里设定从scsi设备启动。）
</p>

<p>
假设你有一个磁盘驱动器在<path>/dev/hda</path>，一个CDROM播放器在<path>/dev/hdb</path>，一个刻录机在<path>/dev/hdd</path>，没有SCSI磁盘驱动器；那么<path>/dev/hdd7</path>在这里就会翻译为<path>(hd1,6)</path>。这看起来很搞笑，但它确实如此，但是我们也可看到，GRUB提供了一个tab补全机制，这对有很多磁盘驱动器又被GRUB的计数理论所迷惑的人来说很方便。
</p>

<p>
我们感受完这些后，该到安装GRUB的时候了。
</p>

</body>
</subsection>
<subsection>
<title>安装GRUB</title>
<body>

<p>
安装GRUB之前首先emerge这个软件包：
</p>

<pre caption = "安装GRUB">
# <i>emerge grub</i>
</pre>

<p>
输入<c>grub</c>开始配置GRUB。你将会到一个<path>grub&gt;</path>命令提示符下。现在，你需要输入正确的命令来安装GRUB启动记录到硬盘上。
</p>

<pre caption = "开始GRUB shell">
# <i>grub</i>
</pre>

<note>
如果你的系统没有任何软盘驱动器，在上个命令下添加<c>--no-floppy</c>选项，防止grub检测（不存在的）软盘驱动器。
</note>

<p>
在这个配置例子中，我们安装GRUB后，它将从boot分区<path>/dev/hda1</path>读出它的信息，把GRUB的启动记录安装到MBR上，这样我们打开电脑立刻看到的就是GRUB提示符。当然，如果你在安装过程中没有根据配置例子中所做的安装，需要类似的改变一下命令。
</p>

<p>
GRUB的tab补全机制可以在GRUB里使用。比如说，你输入“<c>root (</c>”再加上一个Tab键，你将会看到一个设备列表（如<path>hd0</path>）。如果你输入“<c>root (hd0,</c>”再加上一个Tab键，你将会得到所存在的分区列表供你选择（如<path>hd0,0</path>）。
</p>

<p>
通过使用tab补全，设置GRUB应该不会那么难了。现在，让我们继续配置GRUB:-)
</p>

<pre caption = "Installing GRUB in the MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>（指出你的/boot分区的位置）</comment>
grub&gt; <i>setup (hd0)</i>           <comment>（安装GRUB到MBR）</comment>
grub&gt; <i>quit</i>                  <comment>（退出GRUB shell）</comment>
</pre>

<note>
如果你要安装GRUB到一个特定的分区，而不是MBR，你需要相对应的改变<c>setup</c>命令，使其指向正确的分区。比如说，如果你要安装GRUB到<path>/dev/hda3</path>，那么这个命令就变成<c>setup (hd0,2)</c>。不过很少有用户需要这样做。
</note>

<p>
虽然GRUB现在已经装上了，我们仍然需要给它写一份配置文件，这样GRUB会自动启动你最新建的内核。用<c>nano</c>（如果可以，也可用其他的编辑器）创建文件<path>/boot/grub/grub.conf</path>：
</p>

<pre caption = "创建/boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
现在我们继续写一份<path>grub.conf</path>。在下面你将会发现有两个这个例子可用的<path>grub.conf</path>，内核镜像是<path>kernel-2.4.25-gentoo</path>。我们只对第一个<path>grub.conf</path>详细注解一下。
</p>

<ul>
  <li>
    第一个<path>grub.conf</path>适用于没有使用<c>genkernel</c>来编译内核的用户。
  </li>
  <li>
    第二个<path>grub.conf</path>适用于使用<c>genkernel</c>来编译内核的用户。
  </li>
</ul>

<pre caption = "适用于非genkernel用户的grub.conf">
<comment># 这个列出默认的启动选项，0表示第一个，1表示第二个等等。</comment>
default 0
<comment># 默认列表启动前需要等待的秒数。</comment>
timeout 30
<comment># 非常漂亮和大的splash图像来增加点情趣:)
# 如果你没有安装显卡，注解掉这一行</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.25
<comment># 内核镜像（或操作系统）所在的分区位置</comment>
root (hd0,0)
kernel /kernel-2.4.25-gentoo root=/dev/hda3

<comment># 下面三行只用于带有Windows操作系统的双启动。</comment>
<comment># 在这个例子中，Windows位于/dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
chainloader +1
</pre>


<pre caption = "适用于genkernel用户的grub.conf">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.25
root (hd0,0)
kernel /kernel-2.4.25-gentoo root=/dev/ram0 init=/linuxrc real_root=/dev/hda3
initrd /initrd-2.4.25-gentoo

<comment># 只用于双启动</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>


<note>
如果你使用不同的分区和／或者内核镜像，相应的进行调整。但是，要确保任何的GRUB设备（如<path>(hd0,0)</path>）对应于挂载点，而不是根目录。换句话说，既然<path>(hd0,0)</path>是<path>/boot</path>，那么<path>(hd0,0)/grub/splash.xmp.gz</path>对应于<path>/boot/grub/splash.xpm.gz</path>。
</note>

<p>
如果你需要给内核传递其他的参数，只需简单的在内核命令后面加上就行。我们已经传递了一个选项（<c>root=/dev/hda3</c>或者<c>real_root=/dev/hda3</c>），但是你也可以传递别的。作为一个例子，我们给前面讨论过的framebuffer使用<c>vga</c>语句：
</p>

<pre caption = "添加vga语句作为一个内核选项">
title=Gentoo Linux 2.4.25
  root (hd0,0)
  kernel /kernel-2.4.25-gentoo root=/dev/hda3 vga=788
</pre>

<p>
<c>genkernel</c>用户应该只到他们的内核使用同LiveCD一样的启动选项。比如说，如果你有SCSI设备，你应该添加<c>doscsi</c>内核选项。
</p>

<p>
现在保存<path>grub.conf</path>文件并退出。到目前为止，GRUB已经全面的配置完毕，你可以从<uri link="?part=1&amp;chap=10">安装必须的系统工具</uri>继续。
</p>

<p>
如果你对GRUB有更多的问题，请参见<uri link="http://www.gnu.org/software/grub/grub-faq.html">GRUB常见问题回答</uri>或者<uri link="http://www.gnu.org/software/grub/manual/">GRUB手册</uri>。
</p>


</body>
</subsection>
</section>
<section id="lilo">
<title>另一个选择：使用LILO</title>
<subsection>
<title>安装LILO</title>
<body>

<p>
LILO，全名LInuxLOader，是一个可靠和真正的Linux启动程序。但是它缺乏一些GRUB有的特点（这也是为什么GRUB收到流行的原因）。而LILO仍然使用的原因是因为在某些系统中，GRUB不能工作，而LILO可以。当然，它也经常使用到，因为一些人理解和习惯用它。总之，Gentoo支持两者，而明显的你选择使用LILO。
</p>

<p>
安装LILO是一件轻而易举的事情，只需使用<c>emerge</c>。
</p>

<pre caption = "安装LILO">
# <i>emerge --usepkg lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>配置LILO</title>
<body>

<p>
你必须创建<path>/etc/lilo.conf</path>来配置LILO。启动你最喜欢的编辑器（在这个手册里我们为保持一致性，使用<c>nano</c>）创建这个文件。
</p>

<pre caption = "创建/etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
在几个章节前，我们已经告诉你要记住你所创建的内核镜像的名字。在下面这个<path>lilo.conf</path>的例子中，我们假设内核镜像名字为<path>kernel-2.4.25-gentoo</path>。我们在这个例子中也使用同样的分区。这也分成两个部分：
</p>

<ul>
  <li>
    一个适用于不用<c>genkernel</c>来编译内核的用户
  </li>
  <li>
    一个适用于使用<c>genkernel</c>来编译内核的用户
  </li>
</ul>

<pre caption = "/etc/lilo.conf样例">
boot=/dev/hda             <comment># 安装LILO到MBR</comment>
prompt                    <comment># 给用户选择其他启动选项的机会</comment>
timeout=50                <comment># 在启动默认选项之前等待5秒钟</comment>
default=gentoo            <comment># 当时间过了后，启动“gentoo”选项</comment>
<comment># 只用于你使用framebuffer的情况。否则去掉这一行：</comment>
vga=788                   <comment># Framebuffer设置。根据你的喜好调整</comment>

<comment># 适用于非genkernel用户</comment>
image=/boot/kernel-2.4.25-gentoo
  label=gentoo            <comment># 给这个启动选项一个名字</comment>
  read-only               <comment># 根目录启动时只读。不要改变此项！</comment>
  root=/dev/hda3          <comment># 根目录所在位置</comment>

<comment># 适用于genkernel用户</comment>
image=/boot/kernel-2.4.25-gentoo
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc real_root=/dev/hda3"
  initrd=/boot/initrd-2.4.25-gentoo

<comment># 下面两行仅用于带有Windows操作系统的双启动</comment>
<comment># 在这个例子中，Windows位于/dev/hda6。</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
如果你使用不同的分区表和／或者内核镜像，相应的进行修改。
</note>

<p>
如果你要传递额外的选项给内核，在启动选项中添加一条<c>append</c>语句。作为一个例子，我们添加<c>vga=788</c>语句来启用framebuffer：
</p>

<pre caption = "使用append来添加内核选项">
image=/boot/kernel-2.4.25-gentoo
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="vga=788"</i>
</pre>

<p>
<c>genkernel</c>用户应该知道他们的内核使用同LiveCD一样的启动选项。比如说，如果你有SCSI设备，你应该添加<c>doscsi</c>内核选项。
</p>


<p>
现在保存文件并退出。为完成LILO的安装和配置，你必须运行<c>/sbin/lilo</c>，这样LILO将会把<path>/etc/lilo.conf</path>应用到你的系统里（如把自己安装到磁盘里）。记住，每次你安装一个新的内核，你都得重新运行<c>/sbin/lilo</c>。
</p>

<pre caption = "完成LILO的安装">
# <i>/sbin/lilo</i>
</pre>

<p>
现在从<uri link="?part=1&amp;chap=10">安装必要的系统工具</uri>继续。
</p>

</body>
</subsection>
</section>
</sections>
