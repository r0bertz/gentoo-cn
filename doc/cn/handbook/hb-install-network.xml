<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/handbook/hb-install-network.xml,v 1.33 2004/07/09 11:24:20 neysx Exp $ -->

<sections>
<section>
<title>你可以不使用网络，但是……</title>
<subsection>
<title>谁可以不需要网络</title>
<body>

<p>
根据你安装Gentoo时采用的介质，你可以或者不能不需要网络（或者因特网）继续。不不，我们是说真的，决不会玩弄你的:-)
</p>

<p>
一般来说你需要网络（和因特网）。但是，Gentoo也提供了不需要网络连接的安装方式，这个唯一的例外就是使用Gentoo通用LiveCD。
</p>

</body>
</subsection>
<subsection>
<title>为什么我需要网络？</title>
<body>

<p>
从因特网上安装Gentoo可以提供一个完全最新的Gentoo安装。你将可以基于最新的Portage树（我们提供一系列的软件包和软件管理工具）来安装，这也是网络安装收到欢迎的一个原因。但是，有些人不能或者不愿意使用一个活动的网络连接来安装Gentoo。
</p>

<p>
如果你正是处于这种情况，你将需要使用Gentoo通用LiveCD。这种LiveCD里包含有源代码、Portage树的一个快照和安装Gentoo基本系统和其他的工具。当然这种方法也有其代价，就是你不能获得最新的软件，当然这些区别会很小。
minimal.
</p>

<p>
如果你要使用这样的一种同样LiveCD，进行无网络安装，跳过这章的其余部分，从<uri link="?part=1&amp;chap=4">磁盘准备</uri>继续。否则，从下面的网络配置部分继续。
</p>

</body>
</subsection>
<subsection>
<title>可选：配置代理</title>
<body>

<p>
如果你需要通过代理进入因特网，你可能需要在安装中设置代理信息。设置代理是很简单的一件事清：你只需要定义一个包含代理服务器信息的变量即可。
</p>

<p>
大多数情况下，你可以使用服务器主机名来定义这个变量。作为例子，我们假设代理服务器叫做<e>proxy.gentoo.org</e>，端口为8080。
</p>

<pre caption="定义代理服务器">
<comment>（如果代理通过HTTP协议）</comment>
# <i>export http_proxy="http://proxy.gentoo.org:8080"</i>
<comment>（如果代理通过FTP协议）</comment>
# <i>export ftp_proxy="ftp://proxy.gentoo.org:8080"</i>
<comment>（如果代理通过RSYNC协议）</comment>
# <i>export RSYNC_PROXY="proxy.gentoo.org:8080"</i>
</pre>

<p>
如果你的代理需要用户名和密码，你应该给这个变量定义使用如下的语法格式：
</p>

<pre caption="给代理服务器变量添加用户名/密码">
http://username:password@server
</pre>

<p>
比如，对于我们前面的HTTP代理，我们将使用用户名“john”和密码“f00b_r”：
</p>

<pre caption="授权的代理">
# <i>export http_proxy="http://john:f00b_r@proxy.gentoo.org:8080"</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>自动检测网络</title>
<subsection>
<title>可能已经可以工作？</title>
<body>

<p>
如果你的系统处于一个有DHCP服务器的以太网中，很可能你的网络配置已经自动完成。如果确实如此，你应该可以使用到LiveCD里很多网络相关的命令如<c>ssh</c>、<c>scp</c>、<c>ping</c>、<c>irssi</c>、<c>wget</c>和<c>links</c>等。
</p>

<p>
如果网络已经配置好了，命令<c>/sbin/ifconfig</c>应该列出除开lo等的网络接口，如eth0：
</p>

<pre caption="/sbin/ifconfig列出工作中的网络配置">
# <i>/sbin/ifconfig</i>
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11 Base address:0xe800 
</pre>

</body>
</subsection>
<subsection>
<title>测试网络</title>
<body>

<p>
你可能想试着测试一下你的ISP的域名服务器（在<path>/etc/resolv.conf</path>里）和选择的一个网址，以确认一下你的数据包可以到达网络中，DNS域名解析也能正确工作等……
</p>

<pre caption="进一步测试网络">
# <i>ping -c 3 www.yahoo.com</i>
</pre>

<p>
你现在可以使用你的网络了吗？如果可以，你可以跳过这一节的其他部分，从<uri link="?part=1&amp;chap=4">磁盘准备</uri>继续。如果还不行，那实在倒霉，你还得继续努力了:-)
</p>

</body>
</subsection>
</section>
<section>
<title>自动配置网络</title>
<subsection>
<body>

<p>
如果网络还不能立即工作，一些安装介质允许你使用<c>net-setup</c>（常规网络）或者<c>adsl-setup</c>（ADSL用户）或者<c>pptp</c>（PPTP用户，仅用于x86系统）。
</p>

<p>
如果你的安装介质不包含上述提到的任何一个工具，或者网络仍然不起作用，从<uri link="#doc_chap4">手动配置网络</uri>继续。
</p>

<ul>
  <li>
    常规的以太网用户应该从<uri link="#net-setup">默认：使用net-setup</uri>继续
  </li>
  <li>
    ADSL用户应该从<uri link="#rp-pppoe">另一种办法：使用RP-PPPoE</uri>继续
  </li>
  <li>
    PPTP用户应该从<uri link="#pptp">另一种办法：使用PPTP</uri>继续
  </li>
</ul>

</body>
</subsection>
<subsection id="net-setup">
<title>默认：使用net-setup</title>
<body>

<p>
如果网络没有自动配置好，最简单的办法是运行<c>net-setup</c>脚本来设置网络：
</p>

<pre caption="运行脚本net-setup">
# <i>net-setup eth0</i>
</pre>

<p>
<c>net-setup</c>将会问你一些关于网络环境的问题。当所有完成后，你应该就有了一个可以工作的网络连接，然后可以按照前面提到的办法测试一下你的网络。如果测试成功，祝贺你！你现在已经准备好安装Gentoo了，跳过这节的其他部分，从<uri link="?part&amp;chap=4">磁盘准备</uri>继续。
</p>

<p>
如果网络仍然不能工作，从<uri link="#doc_chap4">手动配置网络</uri>继续。
</p>


</body>
</subsection>
<subsection id="rp-pppoe">
<title>另一种方法：使用RP-PPPoE</title>
<body>

<p>
假设你需要使用PPPoE连接到因特网上，LiveCD（任何版本）里包含了方便设置的<c>rp-pppoe</c>。使用它提供的<c>adsl-setup</c>脚本可以配置网络连接。程序将会提示你输入连接到adsl调制解调器的以太网设备、用户名、密码、DNS服务器的IP地址和是否需要设置基本的防火墙。
</p>

<pre caption="使用rp-pppoe">
# <i>adsl-setup</i>
# <i>adsl-start</i>
</pre>

<p>
如果出现什么问题的话，查看<path>/etc/ppp/pap-secrets</path>或者<path>/etc/ppp/chap-secrets</path>来检查确认已经正确的输入用户名和密码，并要确认你使用的是正确的以太网设备。如果以太网设备不存在，你将必须加载准备的网络模块。那种情况下你应该从<uri link="#doc_chap4">手动配置网络</uri>继续，那里我们解释了怎样加载正确的网络模块。
</p>

<p>
如果一切正常，从<uri link="?part=1&amp;chap=4">磁盘准备</uri>继续。
</p>

</body>
</subsection>
<subsection id="pptp">
<title>另一种方法：使用PPTP</title>
<body>

<p>
如果你需要PPTP支持，你可以使用LiveCD提供的<c>pptpclient</c>。但是首先你得确认配置准确。编辑<path>/etc/ppp/pap-secrets</path>或者<path>/etc/ppp/chap-secrets</path>，使其包含正确的用户名/密码：
</p>

<pre caption="编辑/etc/ppp/chap-secrets">
# <i>nano -w /etc/ppp/chap-secrets</i>
</pre>

<p>
然后根据需要调整<path>/etc/ppp/options.pptp</path>：
</p>

<pre caption="编辑/etc/ppp/options.pptp">
# <i>nano -w /etc/ppp/options.pptp</i>
</pre>

<p>
当所有这些完成后，运行<c>pptp</c>（并带上你不能在<path>options.pptp</path>里设置的参数）来连接到服务器：
</p>

<pre caption="连接到一个拨号服务器">
# <i>pptp &lt;server ip&gt;</i>
</pre>

<p>
现在可以从<uri link="?part=1&amp;chap=4">磁盘准备</uri>继续。
</p>

</body>
</subsection>
</section>
<section>
<title>手动配置网络</title>
<subsection>
<title>加载准确的网络模块</title>
<body>

<p>
当LiveCD启动时，它会尝试检测你的硬件设备并加载准确的内核模块（驱动）来支持这些硬件。大多数情况下，它会做的很漂亮。但是，一些情况下，它可能没有自动加载你需要的模块。
</p>

<p>
如果<c>net-setup</c>或者<c>adsl-setup</c>失败了，那么有可能你的网卡没有立即检测到。这意味着你需要手动为它加载正确的内核模块。
</p>

<p>
使用<c>ls</c>来查看我们给网络提供了什么内核模块：
</p>

<pre caption="搜索提供的模块">
# <i>ls /lib/modules/`uname -r`/kernel/drivers/net</i>
</pre>

<p>
如果你找到一个适合你网卡的驱动，使用<c>modprobe</c>来加载这个内核模块：
</p>

<pre caption="使用modprobe来加载内核模块">
<comment>（作为例子，我们加载模块pcnet32）</comment>
# <i>modprobe pcnet32</i>
</pre>

<p>
然后使用<c>ifconfig</c>来检查网卡是否已经检测到。一个检测到的网卡会有类似如下的结果：
</p>

<pre caption="测试网卡的存在，成功！">
# <i>ifconfig eth0</i>
eth0      Link encap:Ethernet  HWaddr FE:FD:00:00:00:00  
          BROADCAST NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
</pre>

<p>
但是如果你收到如下错误信息，那么你的网卡还是没有检测到：
</p>

<pre caption="测试网卡的存在，失败！">
# <i>ifconfig eth0</i>
eth0: error fetching interface information: Device not found
</pre>

<p>
如果在你的系统中有多个网卡名为<e>eth0</e>、<e>eth1</e>等。确认你要使用的网卡可以工作正常，并且在这篇文档里使用的都是准确的网卡。我们假设使用的网卡是<e>eth0</e>。
</p>

<p>
假设你现在网卡已经检测到了，你可以再次尝试使用<c>net-setup</c>或者<c>adsl-setup</c>（现在应该可以工作了），但是为了你们其中的一些“顽固分子”，这里我们将解释怎样手动配置网络。
</p>

<p>
根据你的网络设置来选择下面的章节：
</p>

<ul>
  <li><uri link="#dhcp">使用DHCP</uri>来自动设置IP</li>
  <li>
    如果你有一个无线网卡的话，<uri link="#wireless">无线网络的准备</uri>
  </li>
  <li>
    <uri link="#network_term">理解网络名词</uri>解释了对于网络你应该知道的信息
  </li>
  <li>
    <uri link="#ifconfig_route">使用ifconfig和route</uri>解释了怎样手动设置网络
  </li>
</ul>

</body>
</subsection>
<subsection id="dhcp">
<title>使用DHCP</title>
<body>

<p>
DHCP（动态主机配置协议）使得自动获得网络信息（IP地址、网络掩码、广播地址、网关、域名服务器等）成为可能。但这个只在你的网络中有一个DHCP服务器的情况下才可以使用这种方法。要通过一个网络接口自动获得这些网络信息，使用<c>dhcpcd</c>：
</p>

<pre caption="使用dhcpcd">
# <i>dhcpcd eth0</i>
<comment>一些网络管理员需要你使用</comment>
<comment>DHCP服务器提供的主机名和域名。</comment>
<comment>这种情况下，使用</comment>
# <i>dhcpcd -HD eth0</i>
</pre>

<p>
如果这个工作正常（尝试ping一些因特网上的服务器，如<uri link="http://www.google.com">Google</uri>）的话，那么一切设置和准备完毕。你可以跳过这节余下的部分，从<uri link="?part=1&amp;chap=4">磁盘准备</uri>继续。
</p>

</body>
</subsection>
<subsection id="wireless">
<title>无线网络的准备</title>
<body>

<note>
不是所有的LiveCD都由<c>iwconfig</c>这个命令。如果你的没有，仍然可以按照<uri link="ftp.linux-wlan.org/pub/linux-wlan-ng/README">linux-wlan-ng项目</uri>里的说明获得这些扩展功能。
</note>

<p>
如果你使用的是一个无线（802.11）网卡，你可能在继续之前配置无线设置。使用<c>iwconfig</c>来查看当前你的网卡的无线设置，会出现类似如下的信息：
</p>

<pre caption="显示当前无线设置">
# <i>iwconfig eth0</i>
eth0      IEEE 802.11-DS  ESSID:"GentooNode"                                   
          Mode:Managed  Frequency:2.442GHz  Access Point: 00:09:5B:11:CC:F2    
          Bit Rate:11Mb/s   Tx-Power=20 dBm   Sensitivity=0/65535               
          Retry limit:16   RTS thr:off   Fragment thr:off                       
          Power Management:off                                                  
          Link Quality:25/10  Signal level:-51 dBm  Noise level:-102 dBm        
          Rx invalid nwid:5901 Rx invalid crypt:0 Rx invalid frag:0 Tx          
          excessive retries:237 Invalid misc:350282 Missed beacon:84            
</pre>

<note>
一些无线网卡可能使用设备名<c>wlan0</c>而不是<c>eth0</c>。
</note>

<p>
对于大多数用户来说，这里可能只有两个重要的设置需要我们来修改：ESSID（aks无线网络名称）或者WEP密匙。如果ESSID和列出的访问点（Access Point）地址已经是你的访问点，而你又没有在使用WEP，那么你的无线设置是正常的。如果你要改变你的ESSID，或者增加一个WEP密匙，你可以执行以下命令：
</p>

<pre caption="修改ESSID和/或添加WEP密匙">
<comment>（这将网络名称改为“GentooNode”）</comment>
# <i>iwconfig eth0 essid GentooNode</i>

<comment>（这设置了一个16进制的WEP密匙）</comment>
# <i>iwconfig eth0 key 1234123412341234abcd</i>

<comment>（这设置了一个ASCII密是，以“s:”开头）</comment>
# <i>iwconfig eth0 key s:some-password</i>
</pre>

<p>
然后你可以使用<c>iwconfig</c>来确认你的无线设置。一旦无线可以正常工作，你可以按照下节（<uri link="#network_term">理解网络名词</uri>）描述的说明或者使用前面提到过的<c>net-setup</c>工具来设置IP级别网络选项。
</p>

</body>
</subsection>
<subsection id="network_term">
<title>理解网络名词</title>
<body>

<note>
如果你知道你的IP地址、广播地址、网络掩码和域名解析服务器，那么你可以跳过这一节，从<uri link="#ifconfig_route">使用ifconfig和route</uri>继续。
</note>

<p>
如果上面的方法都失败了，你就得自己手动配置网络了。不要怕，这一点都不困难。但是我们先来给你解释一些网络名词，这样你将可以更好的根据你的需要来设置网络。当你阅读完这一小节的话，你将会理解什么时<e>网关</e>，<e>网络掩码</e>是用来做什么的，<e>广播</e>地址的格式是怎样的，和为什么你需要<e>域名解析服务器</e>。
</p>

<p>
在一个网络中，主机是由它们的<e>IP地址</e>（因特网协议地址）来标识的。这样的一个地址是由四个处于0到255之间的数字组合而成的，至少我们是这样感觉的。实际上，这样的一个IP地址是由32位字元（0和1）组成，让我们来看个例子：
</p>

<pre caption="IP地址的样例">
IP地址 （数字）：  192.168.0.2
IP地址 （字元）：  11000000 10101000 00000000 00000010
                   -------- -------- -------- --------
                      192      168       0        2
</pre>

<p>
这样的一个IP地址在所有可以访问到的网络中必须是唯一的（也就是说，你能达到的主机都必须有唯一的IP地址）。要区别一个网络中不同的主机，以及这个网络外的主机，IP地址分为了两部分：<e>网络</e>部分和<e>主机</e>部分。
</p>

<p>
而分开这些的就是<e>网络掩码</e>，也是由一系列的1后面加上一系列的0。用1标识的那部分IP地址就是网络部分，其余的就是主机部分。通常，网络掩码也可以写成IP地址的形式。
</p>

<pre caption="网络/主机分离的例子">
IP-address:    192      168      0         2
            11000000 10101000 00000000 00000010
Netmask:    11111111 11111111 11111111 00000000
               255      255     255        0
           +--------------------------+--------+
                    Network              Host
</pre>

<p>
换句话说，192.168.0.14是我们样例网络中的一部分，而192.168.1.2不是。
</p>

<p>
<e>广播</e>地址是你的网络中具有相同网络部分的IP地址，但是只有那些1为主机部分。你的网络中的每个主机都会监视这个IP地址，也就是说这个地址用来广播数据包。
</p>

<pre caption="广播地址">
IP-address:    192      168      0         2
            11000000 10101000 00000000 00000010
Broadcast:  11000000 10101000 00000000 11111111
               192      168      0        255
           +--------------------------+--------+
                     Network             Host
</pre>

<p>
要想去因特网上冲浪，你必须知道网络中那台主机可以共享网络连接。这个主机就叫做<e>网关</e>。既然它是一台普通的主机，它也就有一个普通的IP地址（如192.168.0.1）。
</p>

<p>
我们前面提到过每个主机都有它自己的IP地址。如果你要通过一个名字（而不是IP地址）来访问这台主机，你需要一个能将名字（如<e>dev.gentoo.org</e>）转换为IP地址（如<e>64.5.62.82</e>）的服务。这样的一个服务就叫做域名服务。要使用这种服务，你必须在<path>/etc/resolv.conf</path>里定义必须的<e>域名服务器</e>。
</p>

<p>
有些情况下，你的网关也担当域名服务器的角色。否则的话，你将必须输入你的ISP提供的域名服务器。
</p>

<p>
总的说来，在继续配置之前你必须获得如下的信息：
</p>

<table>
<tr>
  <th>网络项目</th>
  <th>样例</th>
</tr>
<tr>
  <ti>你的IP地址</ti>
  <ti>192.168.0.2</ti>
</tr>
<tr>
  <ti>网络掩码</ti>
  <ti>255.255.255.0</ti>
</tr>
<tr>
  <ti>广播地址</ti>
  <ti>192.168.0.255</ti>
</tr>
<tr>
  <ti>网关</ti>
  <ti>192.168.0.1</ti>
</tr>
<tr>
  <ti>域名解析服务器</ti>
  <ti>195.130.130.5, 195.130.130.133</ti>
</tr>
</table>

</body>
</subsection>
<subsection id="ifconfig_route">
<title>使用ifconfig和route</title>
<body>

<p>
设置网络包括了三个步骤。首先，我们使用<c>ifconfig</c>给自己分配一个IP地址。然后，我们使用<c>route</c>来设定路由的网关。在接着，我们在<path>/etc/resolv.conf</path>里设置域名服务器的IP地址后就结束了。
</p>

<p>
你需要有你的IP地址、广播地址和网络掩码才可以分配IP地址。然后执行下面的命令，其中将<c>${IP_ADDR}</c>换成你的IP地址，<c>${BROADCAST}</c>换为你的广播地址和<c>${NETMASK}</c>换成你的网络掩码：
</p>

<pre caption="使用ifconfig">
# <i>ifconfig eth0 ${IP_ADDR} broadcast ${BROADCAST} netmask ${NETMASK} up</i>
</pre>

<p>
现在使用<c>route</c>来设置路由，其中将<c>${GATEWAY}</c>换成你的网关的IP地址：
</p>

<pre caption="使用route">
# <i>route add default gw ${GATEWAY}</i>
</pre>

<p>
现在便可以用你最喜欢的编辑器（如我么使用<c>nano</c>）打开<path>/etc/resolv.conf</path>：
</p>

<pre caption="创建/etc/resolv.conf">
# <i>nano -w /etc/resolv.conf</i>
</pre>

<p>
然后按照下面的模板填入你的域名服务器的IP地址。确认将<c>${NAMESERVER1}</c>和<c>${NAMESEVER2}</c>换成准确的域名服务器地址：
</p>

<pre caption="/etc/resolv.conf的模板">
nameserver ${NAMESERVER1}
nameserver ${NAMESERVER2}
</pre>

<p>
就这样了。现在再通过ping因特网上的服务器（如<uri link="http://www.google.com">Google</uri>来测试你的网络。如果成功了，那恭喜了，你可以准备安装Gentoo了。从<uri link="?part=1&amp;chap=4">磁盘准备</uri>继续。
</p>

</body>
</subsection>
</section>
</sections>
