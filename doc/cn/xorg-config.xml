<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="/xsl/guide.xsl" ?>

<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/xorg-config.xml,v 1.3 2004/05/29 08:52:16 swift Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/zh_cn/xorg-config.xml">

<title>X服务器配置指南</title>

<author title="Author">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Translator">
  <mail link="dragonnapalm@163.com">dragonnapalm</mail>
</author>

<abstract>
Xorg是一个允许用户通过简单的设置来使用图形界面环境的X Windows服务器。
这篇指南解释了什么是Xorg，如何配置Xorg以及相关的其它各种配置选项。
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->
<license/>

<version>1.2</version>
<date>May 29, 2004</date>

<chapter>
<title>什么是X Window 服务器?</title>
<section>
<title>图形界面 vs 命令行</title>
<body>

<p>
大多数使用者对于命令行的使用感到恐惧。有时我们会想：既然Gentoo（或者其他的Linux
发行版）给我们提供了一定的自由度，那么我们能否通过鼠标的点击来完成我们的工作呢？
呵呵，你当然可以这么做 :-) Linux提供了许多优秀的用户界面和环境，你可以在现有的
系统基础上来对它们进行安装和设置。
</p>

<p>
许多新用户会碰到一个令他们十分惊奇的事实：一种图形用户界面只不过是运行在系统上的一个应用程序。
它<e>不是</e>Linux内核的一部分，也<e>没有</e>集成在你的系统里。它是一个可以为你的
工作站提供图形化工作界面的强大工具。
</p>

<p>
由于标准的重要性，有人为窗口的绘制和移动、通过鼠标的移动和键盘实现程序和用户间的互动，
以及其它重要的方面创建了一种标准，这种标准就叫做<e>X Window 系统</e>，它通常缩写为
<e>X11</e> 或者<e>X</e>。它广泛应用于Unix，Linux，以及其他类Unix操作系统上。 
</p>

<p>
为Linux用户提供运行图形化用户界面条件并且使用X11标准的应用程序是Xorg-X11――
XFree86项目的一个分支。由于XFree86决定使用与GPL相悖的许可证，我们推荐使用
Xorg。但是，Xorg和XFree86之间的区别在目前是很细微的：如果你了解了二者之一，你一定不会对
另一个感到陌生。你同样可以在Portage上找到XFree 4.4以前的版本。
</p>

</body>
</section>
<section>
<title> X.org 项目</title>
<body>

<p>
<uri link="http://www.x.org">X.org</uri>项目创建并且
拥有一个可供自由散布的开源X11系统实施方案。它是一个基于X11的开源桌面构架。
</p>

<p>
Xorg在你的硬件和你想运行的图形界面软件之间提供了一个接口。除此之外，Xorg完全具有
网络意识功能，这意味着当你在一个系统上运行某个程序，你同时可以在另一个系统上查看它。
</p>

</body>
</section>
</chapter>
<chapter>
<title>安装 Xorg</title>
<section>
<title>用 emerge</title>
<body>

<p>
闲聊先就此打住，让我们开始做正事吧。要安装Xorg，你需要运行<c>emerge xorg-x11</c>。
但安装Xorg确实需要一段时间，因此在这期间你可以吃上一点点心。
</p>

<pre caption="安装 Xorg">
# <i>emerge xorg-x11</i>
</pre>

<p>
安装结束后，你可能需要重新初始化一些变量后才能继续。你只需要运行<c>env-update</c>
后再运行<c>source /etc/profile</c>就可完成这一工作。这些操作不会影响到你的系统。
</p>

<pre caption="重新初始化环境变量">
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>配置 Xorg</title>
<section>
<title> xorg.conf 文件</title>
<body>

<p>
Xorg的配置文件名叫<path>xorg.conf</path>，它存在于<path>/etc/X11</path>。
Xorg-X11软件包提供了一个<path>/etc/X11/xorg.conf.example</path>的样本配置文件，
又你可以参照它来设置你自己的配置。如果你需要更多的相关语法的帮助文档，我们强烈推荐你
阅读man帮助手册：
</p>

<pre caption="阅读xorg.conf帮助手册">
# <i>man 5 xorg.conf</i>
</pre>

<p>
希望你能快乐的阅读这些文档，当然，这是不可能的，所以我们下一步就来看看如何自动创建
配置文件。
</p>

</body>
</section>
<section>
<title>默认操作: 自动创建xorg.conf</title>
<body>

<p>
Xorg可以自动为你配置好大多数的选项。在多数情况下，你只需要修改其中的某些行列来
调整你想要的分辨率。如果你对深层次的优化感兴趣，那么请务必阅读文章最后所提供的资源。
但首先，我们需要生成一个Xorg配置文件（希望它能正常工作）。
</p>

<pre caption="创建xorg.conf文件">
# <i>Xorg -configure</i>
</pre>

<p>
当Xorg检测完你的硬件后，请务必注意屏幕上的最后一行显示。如果它告诉你某个地方检测失败，
那么你就不得不自己手工编辑一个<path>xorg.conf</path>文件；如果没有，那么它会告诉你
<path>/root/xorg.conf.new</path>已经创建并可以供你测试了。那么，就让我们测试一下吧 :)
</p>

<pre caption="测试你的xorg.conf.new文件">
# <i>Xorg -config /root/xorg.conf.new</i>
</pre>

<p>
如果一切顺利，你会看到一个并不美观的、令人讨厌的、不成形的名叫<c>twm</c>的窗口管理器――
也许是现有最小的窗口管理器。试着移动一下你的鼠标，看看键盘之类的东西是否能正常工作。
在接下来的部分中，我们将优化我们的<path>xorg.conf</path>以使它更好地适应你的硬件。
现在转到其中一个终端窗口中，输入<c>exit</c> (或者按下 Ctrl-D) 来终止Xorg的运行。如果你
无法使用鼠标来完成窗口间的跳转，你可以按下Ctrl-Alt-Backspace来终止X服务器。
</p>

</body>
</section>
<section>
<title>可选操作: 半自动创建xorg.conf</title>
<body>

<p>
Xorg提供了一个名叫<c>xorgconfig</c>的工具，它将询问你有关系统的各种信息（图形适配器、
键盘……）。它将根据你输入的信息来创建<path>xorg.conf</path>文件。
</p>

<pre caption="半自动创建xorg.conf">
# <i>xorgconfig</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>优化 xorg.conf</title>
<section>
<title>复制xorg.conf</title>
<body>

<p>
先让我们将<path>xorg.conf.new</path>复制为<path>/etc/X11/xorg.conf</path>，
这样我们就不必不断地运行<c>Xorg -config</c>了――直接输入<c>startx</c>显然要轻松得多。
</p>

<pre caption="复制xorg.conf">
# <i>cp /root/xorg.conf.new /etc/X11/xorg.conf</i>
</pre>

<p>
现在运行<c>startx</c>来启动你的X服务器，它将使用你刚才复制过来的文件作为配置文件。
要结束X会话进程，你只需要在活动的xterms中输入<c>exit</c>或者直接按下Ctrl-Alt-Backspace
组合键即可，也许后者的方法显得不太优雅――有时你并不想这样做。当然，这对你的系统并无大碍 :)
</p>

<pre caption="启动 X">
# <i>startx</i>
</pre>

</body>
</section>
<section>
<title>设置分辨率</title>
<body>

<p>
如果你觉得屏幕分辨率有点问题，你需要检查配置文件中的两个段落。首先看看<e>Screen</e>段落，
它列出了X服务器可以运行的所有分辨率。在默认情况下，这个段落往往不存在任何分辨率。
如果是这种情况，Xorg将根据<e>Monitor</e>段落中的信息来给出一个大概的分辨率。
</p>

<p>
Xorg检查<e>Monitor</e>段落中的<c>HorizSync</c>和<c>VertRefresh</c>
设置后会计算出一个有效的分辨率。眼下，先把这些东西放到一边，只有当<e>Screen</e>段落
（接下来将会提到）中更改后的设置无法正常工作时，你才需要看看你的显示器相关规格然后赋予正确的数值。
你也可以使用工具来检测你的显示器信息，比如<c>sys-apps/ddcxinfo-knoppix</c>。
</p>

<warn>
<b>不要</b>在不加考虑的情况下更改这两个与显示器规格有关的变量，任何超出同步率的设置都有可能
损坏显示器。
</warn>

<p>
现在让我们来更改分辨率。在接下来的<path>/etc/X11/xorg.conf</path>的例子中，
我们将加入<c>Modes</c>和<c>DefaultDepth</c>使X服务器把24位色深和1024x768分辨率
作为默认值启动。不要在意下面给出的例子――它只是一个样本，里面的大多数设置都将与你的计算机
设置不同。
</p>

<pre caption="修改/etc/X11/xorg.conf中的Screen段落">
Section "Screen"
  Identifier  "Default Screen"
  Device    "S3 Inc. ProSavage KN133 [Twister K]"
  Monitor   "Generic Monitor"
  <i>DefaultDepth  24</i>
  <comment># 为了便于寻找和阅读请跳过一些内容</comment>
  SubSection "Display"
    Depth   24
    <i>Modes   "1024x768"</i>
  EndSubSection
EndSection
</pre>

<p>
运行X (<c>startx</c>)，看它是否启用了你所需要的分辨率:)
</p>

</body>
</section>
<section>
<title>配置键盘</title>
<body>

<p>
要设置X以使用国际键盘布局，请找到与键盘设置相关的<e>InputDevice</e>段落，并且加入<c>XkbLayout</c>
选项来指明你想使用的键盘布局。比如，接下来我们将为你说明如何应用比利时的键盘布局。你只需要将国家代码
替换为你自己的即可。
</p>

<pre caption="更改键盘布局">
Section "InputDevice"
  Identifier  "Generic Keyboard"
  Driver    "keyboard"
  Option    "CoreKeyboard"
  Option    "XkbRules"  "xorg"
  Option    "XkbModel"  "pc105"
  <i>Option    "XkbLayout" "be"</i>
EndSection
</pre>

</body>
</section>
<section>
<title>配置鼠标</title>
<body>

<p>
如果你的鼠标没有正常工作，你应该首先检查你的鼠标是否已经被系统内核检测到。PS/2鼠标
应该是作为<path>/dev/psaux</path>出现的。而其他鼠标（比如USB）则以<path>/dev/input</path> 
(或者 <path>/dev/input/mice</path>)出现。在任何一种情况下，你可以移动一下你的鼠标，然后检查这些文件的输出
以确认这些设备文件是否已经指向你的鼠标。要结束，请按<c>Ctrl-C</c>。
</p>

<pre caption="检查设备文件">
# <i>cat /dev/input</i>
<comment>(不要忘记按Ctrl-C来结束这项工作)</comment>
</pre>

<p>
如果你的鼠标未被检测到，请检查必要的模块是否已经被载入。
</p>

<p>
如果你的鼠标已经被检测到，那么就在<e>InputDevice</e>段落中合适的位置填入你的设备。
在接下来的例子中，你可以看到我们将设置其它两个选项：<c>Protocol</c>（它列出了可以使用的
鼠标协议――大多数用户使用的是PS/2或者IMPS/2）以及<c>ZAxisMapping</c>（对鼠标滚轮的支持（
如果可用的话））。
</p>

<pre caption="在Xorg中改变鼠标设置">
Section "InputDevice"
  Identifier  "TouchPad Mouse"
  Driver    "mouse"
  Option    "CorePointer"
  <i>Option    "Device"    "/dev/psaux"</i>
  <i>Option    "Protocol"    "IMPS/2"</i>
  <i>Option    "ZAxisMapping"    "4 5"</i>
EndSection
</pre>

<p>
运行<c>startx</c>然后期待结果吧:)恭喜，（希望）现在你的系统上已经有一个工作着的Xorg了。
接下来就是删除这个既不美观又不实用的窗口管理器，然后装上一个功能丰富的窗口管理器（甚至是
桌面环境），比如KDE或者GNOME，但是这已经超出我们所讨论的范围了 :)
</p>

</body>
</section>
</chapter>
<chapter>
<title>资源</title>
<section>
<title>创建一个优化的xorg.conf</title>
<body>

<p>
首先，<c>man 5 xorg.conf</c>为你配置相关设置提供了快速而又完备的参考。当你编辑你的
配置文件的时候，请在最接近编辑窗口的位置打开终端并阅读这些资料。
</p>

<p>
在你系统上的第二个资源是<path>/usr/X11R6/lib/X11/doc</path>的目录，它下面包含了各种图形芯片
相关的<path>README</path>
</p>

<p>
互联网上有许多关于编辑修改<path>xorg.conf</path>的资源，我们只在这里列出其中的一小部分，
你可以使用<uri link="http://www.google.com">Google</uri>来搜索更多的资料 :)
由于<path>xorg.conf</path>和<path>XF86Config</path>（XFree86项目使用的配置文件）在多数
配置上使用相同的句法，而且有关<path>XF86Config</path>的信息相对更多一点，因此我们也同样列出了
XFree的相关资源。
</p>

<ul>
  <li>
    <uri link="http://tldp.org/HOWTO/XFree-Local-multi-user-HOWTO/">The XFree
    Local Multi-User HOWTO（XFree本地多用户指南）</uri>
  </li>
  <li>
    <uri
    link="http://www-106.ibm.com/developerworks/edu/os-dw-linuxxwin-i.html">An
    Introduction to XFree 4.x（XFree 4.x介绍）</uri> 作者： Chris Houser
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
