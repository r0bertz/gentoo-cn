<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/xsl/guide.xsl" ?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/metadata.xml,v 1.4 2004/03/07 12:12:53 swift Exp $ -->

<guide link="/doc/zh_cn/win4lin.xml">
<title>win4lin在Gentoo Linux 2.6内核下的安装</title>

<author title="Author">
  <mail link="hauser_wong@yahoo.com">Hauser</mail>
</author>
<author title="Author">
  <mail link="penny@linuxsir.org">Lucida</mail>
</author>
<author title="Editor">
  <mail link="joanphan@gmail.com">Elang</mail>
</author>

<abstract>
win4lin在2.6系列内核中的配置和安装。
</abstract>

<license/>

<version>0.1</version>
<date>2004年11月16日</date>

<chapter>
<title>从Portage中安装win4lin</title>
<body>

<p>
如果你的内核选用<path>win4lin-sources-2.6.7-r5</path>，这个内核相对<path>gentoo-dev-sources-2.6.7-r14</path>要简陋一些，安装win4lin则可直接使用。
</p>

<pre caption="win4lin-sources-2.6.7-r5下的安装">
# ACCEPT_KEYWORDS="~x86" emerge win4lin
</pre>

<note>
这个我们不推荐使用。
</note>

</body>
</chapter>
<chapter>
<title>手动安装win4lin</title>
<body>

<p>
相对来说，内核<path>gentoo-dev-sources-2.6.7-r14</path>则比较常用些，打的补丁也比较多，功能比较丰富。但是portage中并不可以直接在这个基础上安装win4lin，我们可以手动安装。
</p>

<p>
首先从<uri link="http://www.netraverse.com/member/downloads/kernel_patch.php">这儿</uri>下载内核补丁：<path>mki-adapter26_1_3_6.patch</path>和<path>Kernel-Win4Lin3-2.6.7.patch</path>
</p>

<p>
然后准备编译内核，先把内核源码备份一下，如下：
</p>

<pre caption="备份内核源码">
# cd /usr/src
# cp -a linux-2.6.7-gentoo-r14 win4lin
# rm linux
# ln -s win4lin linux
# cd linux
# nano -w Makefile

<note>修改"EXTRAVERSION = "，比如改成"-win4lin-r14"之类以便识别</note>
 
</pre>

<p>
把下载的<path>mki-adapter26_1_3_6.patch</path>和<path>Kernel-Win4Lin3-2.6.7.patch</path>拷到目录下，然后给内核打补丁，代码：
</p>

<pre caption="给内核打补丁">
# patch -p1 &lt; Kernel-Win4Lin3-2.6.7.patch &gt; patch.log 2&gt;&amp;1
# patch -p1 &lt; mki-adapter26_1_3_6.patch &gt;&gt; patch.log 2&gt;&amp;1
# less patch.log 
</pre>

<p>
如果patch.log里没错误，就可以开始编译kernel了。注意以下这些要编进kernel：
</p>

<ul>
<li>Enable loadable module support</li>
<li>System V IPC</li>
<li>Kernel support for ELF binaries</li>
<li>Networking support</li>
<li>TCP/IP networking</li>
<li>ISO 9660 CD-ROM filesystem support</li>
<li>Include NeTraverse Win4Lin Support</li>
</ul>

<p>
编译的同时可以安装好win4lin：
</p>

<pre caption="安装win4lin">
# ACCEPT_KEYWORDS="~x86" emerge -O win4lin 
</pre>

<p>
上述都完成后，重启准备配置和安装windows。
</p>

</body>
</chapter>
<chapter>
<title>配置win4lin</title>
<body>

<p>
如果你想确认win4lin是否已经正确的编入内核中，你可以：
</p>

<pre caption="确认win4lin是否编入内核">
# modprobe mki-adapter
# cat /proc/mki-adapter/version
</pre>

<note>
按照本文的安装方法，应该显示为<path>1.3.6</path>。如果在使用<c>modprobe</c>或<c>cat</c>发生错误，你新编译的内核可能未正确的编译好或启动。
</note>

<p>
确认win4lin已经编入内核后，开始进行初始设定，并启动服务：
</p>

<pre caption="安装win4lin">
# emerge -O win4lin
</pre>
<p>
现在的稳定版是win4lin-5.1.1，可以到/var/db/pkg/app-emulation下看看。
把windows CD放入光驱，进行初始设定：
</p>


<pre caption="win4lin的初始化">
# ebuild /var/db/pkg/app-emulation/win4lin-5.1/win4lin-5.1.ebuild config
# /etc/init.d/Win4Lin start 
</pre>

<note>
如果显示有问题可以先启动win4lin服务，
<c># /etc/init.d/Win4Lin start</c>
然后用以上ebuild那个指令再试一次。
</note>
<p>
完成之后，用一个有效的license号码代替/var/win4lin/install下license.lic里那个。然后便可以启动服务和安装windows：
</p>

<pre caption="安装windows">
# /etc/init.d/Win4Lin start   <codenote>(或restart，如果你之前已经启动了服务的话)
 // 最好以普通用户身份安装windows</codenote>
$ installwindows
</pre>

<p>
在询问网络的安装方式的时候，可以选择Winsock模式。接着就可以看到windows的安装画面了。最后将win4lin添加到默认运行级别中，即可每次电脑启动后直接使用你的win4lin了。
</p>

<pre caption="添加Win4lin到默认运行级别">
# rc-update add Win4Lin default
</pre>

</body>
</chapter>
</guide>
