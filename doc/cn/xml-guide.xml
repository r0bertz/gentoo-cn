<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/xsl/guide.xsl" ?>
<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/xml-guide.xml,v 1.31 2004/05/21 13:32:28 swift Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/zh_cn/xml-guide.xml">
<title>Gentoo Linux XML 指南</title>

<author title="Author">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Author"><!-- zhen@gentoo.org -->
  John P. Davis
</author>
<author title="Editor">
  <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Editor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Translator">
  <mail link="jaonphan@citiz.net">Hans Joanphan</mail>
</author>

<abstract>
这个指南会告诉你怎样用轻量级的Gentoo GuideXML语法来创作网页式文档。这个语法是Gentoo Linux文档的官方格式，并且这个文档本身就是用GuideXML创建的。这个文档需要有对XML和HTML基本的了解。
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->
<license/>

<version>2.10</version>
<date>2004年5月9日</date>

<chapter>
<title>Guide XML的基本知识</title>
<section>
<title>Guide XML的设计目标</title>
<body>

<p>
这个Guide XML的语法是轻量级的，但确是很丰富的，因此学习和提供我们编写网页式文档所需特性是很容易的。标签的数目尽量保持最少，就只是那些我们需要的。这使得将Guide XML转还为其他格式也很容易，如DocBook, XML/SGML，或者直接用于网络的HTML格式。
</p>

<p>
设计的目标是让<e>创建</e>和<e>转换</e>Guide XML文档更容易。
</p>

</body>
</section>
<section>
<title>更多的资源</title>
<body>

<p>
如果你打算为Gentoo贡献一些文档，或者你要测试GuideXML，请阅读<uri link="http://www.gentoo.org/doc/en/doc-tipsntricks.xml">文档开发技巧</uri>，这个包含了文档开发的一些技巧和小戏法。
</p>

</body>
</section>
</chapter>

<chapter>
<title>Guide XML</title>
<section>
<title>基本的结构</title>
<body>

<p>
现在你知道怎样转换Guide XML了，你将开始学习GuideXML语法。我们将从一个Guide XML文档的初始化标签开始：
</p>

<pre caption="一个Guide XML文档的初始化部分">
&lt;?xml version='1.0' encoding="UTF-8"?&gt;
&lt;!DOCTYPE guide SYSTEM "/dtd/guide.dtd"&gt;
&lt;guide link="relative_link_to_your_guide"&gt;
&lt;title&gt;<i>Gentoo Linux Documentation Guide</i>&lt;/title&gt;
&lt;author title="<i>Chief Architect</i>"&gt;
  &lt;mail link="<i>drobbins@gentoo.org</i>"&gt;<i>Daniel Robbins</i>&lt;/mail&gt;
&lt;/author&gt;
&lt;author title="<i>Editor</i>"&gt;
  &lt;mail link="<i>thomasfl@gentoo.org</i>"&gt;<i>Thomas Flavel</i>&lt;/mail&gt;
&lt;/author&gt;

&lt;abstract&gt;
<i>这个指南告诉你怎样用我们最新的轻量级的Gentoo GuideXML语法来创建网页式文档。
这个语法是Gentoo Linux网页式文档的官方格式，并且这个文档本身就是用GuideXML创建的。</i>
&lt;/abstract&gt;

&lt;!-- The content of this document is licensed under the CC-BY-SA license --&gt;
&lt;!-- See http://creativecommons.org/licenses/by-sa/1.0 --&gt;
&lt;license/&gt;

&lt;version&gt;<i>1.0</i>&lt;/version&gt;
&lt;date&gt;<i>29 Mar 2001</i>&lt;/date&gt;
</pre>

<p>
在第一行，我们看到表明此文档为XML文档的这个必须的标签。后面接着的，有一个<c>&lt;guide&gt;</c>标签 -- 这个文档都包含在<c>&lt;guide&gt; &lt;/guide&gt;</c>标签对里。接着，有一个<c>&lt;title&gt;</c>标签，用来设定整个文档的标题。
</p>

<p>
接着，我们看到了标签<c>&lt;author&gt;</c>，这里包含了这个文档各个作者的信息。每个<c>&lt;author&gt;</c>标签允许有一个可选的元素<c>title=</c>，用来说明作者和文档的关系（作者，共同作者，编辑，等等）。在这个特定的例子中，作者的名字用另外一个标签<c>&lt;mail&gt;</c>围起来，用来说明指定人的email地址。标签<c>&lt;mail&gt;</c>是可选和可忽略的，每个指南文档都需要不少于一个<c>&lt;author&gt;</c>元素。
</p>

<p>
然后，我们来看看标签<c>&lt;abstract&gt;</c>，<c>&lt;version&gt;</c>和<c>&lt;date&gt;</c>，这些是用来描述这个文档的概要、版本和当前版本的日期（格式：DD MMM YYYY）。这些丰富了应该出现在一个Guide文档开始的标签。除开标签<c>&lt;title&gt;</c>和<c>&lt;mail&gt;</c>，这些标签不应随意出现在文档的任何地方，除非在标签<c>&lt;guide&gt;</c>之后的地方，并且为了一致性，推荐（并不是必须的）这些标签出现文档内容的前面。
</p>

<p>
最后我们看看标签<c>&lt;license/&gt;</c>，用来在<uri link="http://creativecommons.org/licenses/by-sa/1.0/">Creative 
Commons - Attribution / Share Alike</uri>协议下发行此文档，这是由<uri link="/doc/en/doc-policy.xml">Documentation Policy</uri>所必须的。
</p>

</body>
</section>
<section>
<title>段落和章节</title>
<body>

<p>
一旦初始化的标签设定好以后，你就可以准备往这个文档添加结构性元素。Guide文档分为章，每章有一个或多个节组成。每章节都有一个标题。这里有一个只有一节的章的例子，包含了几个段落。如果你将这个XML追加到<uri link="#doc_chap2_pre1">previous excerpt</uri>的XML里，并追加<c>&lt;/guide&gt;</c>到这个文件的最后，你将获得一个合法的（虽然很小）的Guide文档：
</p>

<pre>
&lt;chapter&gt;
&lt;title&gt;<i>这是我的一章</i>&lt;/title&gt;
&lt;section&gt;
&lt;title&gt;<i>这是我一章中的一节</i>&lt;/title&gt;
&lt;body&gt;

&lt;p&gt;
<i>这是一节中的实际内容。</i>
&lt;/p&gt;

&lt;/body&gt;
&lt;/section&gt;
&lt;/chapter&gt;
</pre>

<p>
在上面，我通过增加一个子元素<c>&lt;title&gt;</c>到元素<c>&lt;chapter&gt;</c>设定章的主题。
然后，我通过增加一个元素<c>&lt;section&gt;</c>新增一个节。如果你看看元素<c>&lt;section&gt;</c>里面，
你将发现他有两个子元素：一个<c>&lt;title&gt;</c>和一个<c>&lt;body&gt;</c>。
标签<c>&lt;title&gt;</c>我们不再陌生了，标签<c>&lt;body&gt;</c> 包含了特定节的实际文本内容。
我们来看看允许出现在元素<c>&lt;body&gt;</c>里的标签。
</p>

<note>
元素<c>&lt;guide&gt;</c>可以包含多个<c>&lt;chapter&gt;</c>元素，一个<c>&lt;chapter&gt;</c>可以包
含多个元素<c>&lt;section&gt;</c>。但是一个特定的元素<c>&lt;section&gt;</c>只能包含一个元素<c>&lt;body&gt;</c>。
</note>

</body>
</section>
<section>
<title>一个&lt;body&gt;的例子</title>
<body>

<p>
现在，我们该学学怎么标记实际内容了。这是一个元素<c>&lt;body&gt;</c>XML代码的例子：
</p>

<pre>
&lt;p&gt;
这是一个段落  &lt;path&gt;/etc/passwd&lt;/path&gt; 是一个文件。&lt;uri&gt;http://www.gentoo.org&lt;/uri&gt; 
是我喜欢的网站地址。输入 &lt;c&gt;ls&lt;/c&gt; 如果你喜欢他。我现在&lt;e&gt;真&lt;/e&gt;的要睡了。
&lt;/p&gt;

&lt;pre&gt;
这是文本输出或代码。
# &lt;i&gt;这是用户的输入&lt;/i&gt;

选择性的使用强调让HTML/XML阅读起来更人性化：
&lt;foo&gt;&lt;i&gt;bar&lt;/i&gt;&lt;/foo&gt;

&lt;codenote&gt;这是在代码块中插入内部注解的方法&lt;/codenote&gt;
&lt;/pre&gt;

&lt;note&gt;
这是一个注解。
&lt;/note&gt;

&lt;warn&gt;
这是一个警告。
&lt;/warn&gt;

&lt;impo&gt;
这很重要。
&lt;/impo&gt;
</pre>

<p>
现在，看看元素<c>&lt;body&gt;</c>是怎样工作的：
</p>

<p>
这是一个段落。<path>/etc/passwd</path>是一个文件。<uri>http://www.gentoo.org</uri>是我喜欢的网站地址。
输入<c>ls</c>如果你喜欢他。我现在<e>真</e>的要睡了。
</p>

<pre>
这是文本输出或代码。
# <i>这是用户的输入</i>

选择性的使用强调让HTML/XML阅读起来更人性化。
&lt;foo&gt;<i>bar</i>&lt;/foo&gt;

<codenote>这是在代码块中插入内部注解的方法</codenote>
</pre>

<note>
这是一个注解。
</note>

<warn>
这是一个警告。
</warn>

<impo>
这很重要。
</impo>

</body>
</section>
<section>
<title>标签&lt;body&gt;</title>
<body>

<p>
在上一节中，我们介绍了不少新的标签，这里也是你需要知道的。标签<c>&lt;p&gt;</c>（段落），<c>&lt;pre&gt;</c>（代码块）<c>&lt;note&gt;</c>, <c>&lt;warn&gt;</c>（警告）和<c>&lt;impo&gt;</c>（重要的）都可以包含一行或多行文本。除开元素<c>&lt;table&gt;</c>（我们呆会也会讲到）外，这些标签都应该出现在元素<c>&lt;body&gt;</c>里。另外，这些标签<e>不应该</e>堆起来，也就是说，不可以把一个元素<c>&lt;note&gt;</c>放在一个元素<c>&lt;p&gt;</c>里。你可能会猜到，元素<c>&lt;pre&gt;</c>可以准确的保留里面的空格，使得对代码编写摘录非常合适，你也可以给标签<c>&lt;pre&gt;</c>一个标题：
</p>

<pre caption = "有标题的&lt;pre&gt;">
&lt;pre caption = "Output of uptime"&gt;
# &lt;i&gt;uptime&lt;/i&gt;
16:50:47 up 164 days,  2:06,  5 users,  load average: 0.23, 0.20, 0.25
&lt;/pre&gt;
</pre>

</body>
</section>
<section>
<title>&lt;path&gt;, &lt;c&gt; and &lt;e&gt;</title>
<body>

<p>
元素<c>&lt;path&gt;</c>，<c>&lt;c&gt;</c>和<c>&lt;e&gt;</c>可以在任何一个子标签<c>&lt;body&gt;</c>里使用，但在标签<c>&lt;pre&gt;</c>里除外。
</p>

<p>
元素<c>&lt;path&gt;</c>是用来标记为<e>磁盘上的文件</e>的文本，不管是<e>绝对或相对路径</e>，或者一个<e>简单的文件名</e>都适合。这个元素一般情况下是用一种monospace字体来将他和标准段落的排版方式区别开。
</p>

<p>
元素<c>&lt;c&gt;</c>是用来标记一个<e>命令</e>或者<e>用户的输入</e>。想到<c>&lt;c&gt;</c>是一种提醒读者这是一种他们可以输入的，这会起到某种特殊的效果。比如说，这个文档里所有的XML标签都是圈在一个<c>&lt;c&gt;</c>元素里，表明这些都是用户可以输入的，但不是一个路径。使用元素<c>&lt;c&gt;</c>，你可以帮助你的读者快速区别出那些他们需要输入的命令。还有，因为标签<c>&lt;c&gt;</c>可以和普通文本区别开来，<e>就不用将用户的输入用双引号圈起来</e>。打比方说，不要想我这样引用元素"<c>&lt;c&gt;</c>"。防止双引号的不必要的使用可以使一个文档可读性更强，并且更可爱些。
</p>

<p>
元素<c>&lt;e&gt;</c>是用来强调一个单词或者词组。如：我<e>真的</e>应该多使用分号。就如你看到的，这个文本和普通的文本以强调形式区别开了。这可以帮助你得写作更加有棱有角。
</p>

</body>
</section>
<section>
<title>&lt;mail&gt; and &lt;uri&gt;</title>
<body>

<p>
早些时候我们已经看到了标签<c>&lt;mail&gt;</c>，它是用来将一个特定的email地址链接到一些文字上，并使用<c>&lt;mail link="foo@bar.com"&gt;Mr. Foo Bar&lt;/mail&gt;</c>这种形式。
</p>

<p>
标签<c>&lt;uri&gt;</c>是用来指向因特网中的文件或者位置。它有两种形式－－第一种用于在普通文本中将实际的链接显示出来，如这个链接：<uri>http://www.gentoo.org</uri>。我通过输入<c>&lt;uri&gt;http://www.gentoo.org&lt;/uri&gt;</c>来创建这个链接。另一种形式是将一个URI链接到其他的文本，如<uri link="http://www.gentoo.org">the Gentoo Linux website</uri>。我是通过输入<c>&lt;uri link="http://www.gentoo.org"&gt;the Gentoo Linux website&lt;/uri&gt;</c>来创建这个链接的。
</p>

</body>
</section>
<section>
<title>图片</title>

<body>

<p>
这里告诉你怎样在一个文档里插入一个图片：<c>&lt;figure link="mygfx.png" short="my picture" caption="my favorite picture of all time"/&gt;</c>。属性<c>link=</c>指向实际图片的位置，属性<c>short=</c>设定一个简单的描述（目前用于图片的HTML的属性<c>alt=</c>）和一个标题。这并不复杂。我们也支持标准的HTML风格的标签&lt;img src="foo.gif"/&gt;来添加没有标题和边框等的图片。
</p>

</body>
</section>
<section>
<title>表格和列表</title>
<body>

<p>
Guide也支持同HTML类似的表格语法。要创建一个表格，使用标签<c>&lt;table&gt;</c>。用标签<c>&lt;tr&gt;</c>开始一行。但是，用来插入实际表格数据时，我们<e>不</e>支持HTML的标签&lt;td&gt;；而替代的，你如果要插入一个开头使用标签<c>&lt;th&gt;</c>，再使用标签<c>&lt;ti&gt;</c>用来插入普通的信息块。你也可以在任何使用标签<c>&lt;ti&gt;</c>的地方使用标签<c>&lt;th&gt;</c>代替，并没有要求元素<c>&lt;th&gt;</c>一定只能出现在第一行。目前，这些标签不支持任何属性，但是以后会加上一些（如即将给元素<c>&lt;table&gt;</c>增加属性<c>caption=</c>）。
</p>

<p>
要创建有序或无序的列表，只需简单的使用HTML风格的标签<c>&lt;ol&gt;</c>，<c>&lt;ul&gt;</c>和<c>&lt;li&gt;</c> tags。列表标签只能出现在标签<c>&lt;body&gt;</c>，<c>&lt;ul&gt;</c>或<c>&lt;ol&gt;</c>里。
</p>

</body>
</section>
<section>
<title>文档内部链接</title>
<body>

<p>
Guide在用超链接链接到文档的其他部分也很容易。你可以输入<c>&lt;uri link="#doc_chap1"&gt;Chapter One&lt;/uri&gt;</c>创建一个链接到<uri link="#doc_chap1">Chapter One</uri>。为链接到<uri link="#doc_chap1_sect2">section two of Chapter One</uri>，只需输入<c>&lt;uri link="#doc_chap1_sect2"&gt;section two of Chapter One&lt;/uri&gt;</c>。要链到第一章的图3，只需输入<c>&lt;uri link="doc_chap1_fig3"&gt;figure 1.3&lt;/uri&gt;</c>。或者输入<c>&lt;uri link="doc_chap2_pre2"&gt;code listing 2.2&lt;/uri&gt;</c>链接到<uri link="#doc_chap2_pre2">code listing 2 in chapter 2</uri>。我们也即将增加自动链接的能力（如表格支持）。
</p>

<p>
但是，有些Guide文档更新很快，使用这种“计数形式”会导致一些错误链接。为解决这个问题，你可以使用属性<c>id</c>为一个设定<c>&lt;chapter&gt;</c>或者<c>&lt;section&gt;</c>一个名字，然后再链接到这个属性就可以了，就像这样：
</p>

<pre caption="使用属性id">
&lt;chapter id="foo"&gt;
&lt;title&gt;This is foo!&lt;/title&gt;
...
&lt;p&gt;
更多信息可以在&lt;uri link="#foo"&gt;foo chapter&lt;/uri&gt;中查到。
&lt;/p&gt;
</pre>

</body>
</section>
</chapter>

<chapter>
<title>编码风格</title>
<section>
<title>简介</title>
<body>

<p>
既然所有的Gentoo文档是合力的结果，并且可能有几个人头持修改一个已存在的文档，那么一种编码风格是必须的。一种编码风格包括两个部分。第一个是和内部的编码有关，怎样摆放xml标签。第二个便是和内容有关，怎样不让读者误解。
</p>

<p>
下面将讲解这两个部分。
</p>

</body>
</section>
<section>
<title>内部编码风格</title>
<body>

<p>
<e>每个</e>GuideXML标签（不管是开标签还是闭标签）后面都需要立即<b>新开一行</b>，下面这些除外：<c>&lt;version&gt;</c>，<c>&lt;date&gt;</c>，<c>&lt;title&gt;</c>，<c>&lt;th&gt;</c>，<c>&lt;ti&gt;</c>，<c>&lt;li&gt;</c>，<c>&lt;i&gt;</c>，<c>&lt;e&gt;</c>，<c>&lt;uri&gt;</c>，<c>&lt;path&gt;</c>，<c>&lt;b&gt;</c>，<c>&lt;comment&gt;</c>，<c>&lt;codenote&gt;</c>，<c>&lt;mail&gt;</c>。
</p>

<p>
<e>每个</e>元素<c>&lt;body&gt;</c>（仅对开标签）和<e>每个</e>标签<c>&lt;chapter&gt;</c>，<c>&lt;p&gt;</c>，<c>&lt;table&gt;</c>，<c>&lt;author&gt;</c> (set)，<c>&lt;pre&gt;</c>，<c>&lt;ul&gt;</c>，<c>&lt;ol&gt;</c>，<c>&lt;warn&gt;</c>，<c>&lt;note&gt;</c>和<c>&lt;impo&gt;</c>（仅对开标签）前都应加上<b>空白行</b>。
</p>

<p>
除开在在标签<c>&lt;pre&gt;</c>里，整字换行都要控制在80个字符内。只有在没有其他办法解决这个问题时（如一个URL超过了字符的最大数），编写者必须在任何出现空格时整字换行。
</p>

<p>
除开在XML父标签是<c>&lt;tr&gt;</c> (from <c>&lt;table&gt;</c>)，<c>&lt;ul&gt;</c>，<c>&lt;ol&gt;</c>和<c>&lt;author&gt;</c>的XML结构时，<b>缩进</b>可以不用。如果用上缩进，每次缩进<e>必须</e>是两个空格，也就是说<e>不</e>使用tab和<e>不</e>用更多的空格。
</p>

<p>
如果整字换行出现在<c>&lt;ti&gt;</c>，<c>&lt;th&gt;</c>或<c>&lt;li&gt;</c>结构中，内容中必须使用缩进。
</p>

<p>
缩进的一个例子：
</p>

<pre caption = "缩进样例">
&lt;table&gt;
&lt;tr&gt;
  &lt;th&gt;Foo&lt;/th&gt;
  &lt;th&gt;Bar&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;ti&gt;这是一个缩进的例子。&lt;/ti&gt;
  &lt;ti&gt;
    如果文档不能在80字符的行中显示，如果父标签你
    允许你必须使用缩进。
  &lt;/ti&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;First option&lt;/li&gt;
  &lt;li&gt;Second option&lt;/li&gt;
&lt;/ul&gt;
</pre>

<p>
<b>属性</b>中，在属性、&quot;=&quot; 记号，和属性值之间都不许有空格。如例：
</p>

<pre caption="属性">
<comment>错误:</comment>     &lt;pre caption = "Attributes"&gt;
<comment>正确:</comment>     &lt;pre caption="Attributes"&gt;
</pre>

</body>
</section>
<section>
<title>外部编码风格</title>
<body>

<p>
在表格（<c>&lt;table&gt;</c>）和列表（<c>&lt;ul&gt;</c>和<c>&lt;ol&gt;</c>）里，除非在多个句子的情况下，不要轻易使用句号(&quot;。&quot;)。在这种情况下，每句话都应该以句号（或者其他标点符号）结束。
</p>

<p>
每句话，包括在表格和列表中的，都应该首字母大写。
</p>

<pre caption="Periods and capital letters">
&lt;ul&gt;
  &lt;li&gt;没有句号&lt;/li&gt;
  &lt;li&gt;带有句号。必须是多个句子，记住了吗？&lt;/li&gt;
&lt;/ul&gt;
</pre>

<p>
代码的列表应该<e>都</e>有一个<c>标题</c>。
</p>

<p>
使用<c>&lt;uri&gt;</c>时尽量用上属性<c>link</c>。也就是说，尽量用<uri link="http://www.gentoo.org">Gentoo Website</uri>替代<uri>http://www.gentoo.org</uri>。
</p>

<p>
如果在<c>&lt;pre&gt;</c>结构中插入注解，如果代码的内容是C/C++代码，只能使用<c>&lt;codenote&gt;</c>。其他情况下，组合使用<c>&lt;comment&gt;</c>和括号。还要将注解放在主题的注释之<e>前</e>。
</p>

<pre caption="注解的例子">
<comment>(Substitute "john" with your user name)</comment>
# <i>id john</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>手册的格式</title>
<section>
<title>Guide文档 Vs 手册</title>
<body>

<p>
对于内容很大的文档，如<uri link="/doc/en/handbook/handbook-x86.xml?part=1">安装说明</uri>，我们需要一个更大方的格式。我们设计了一个与CuideXML兼容但增强的格式，允许我们书写模块和多页的文档。
</p>

</body>
</section>
<section>
<title>主文件</title>
<body>

<p>
第一个不同的就是我们需要一个“主”文档。这个文档并没有包含什么实际内容，只是指向不同的文档模块的链接。这和GuideXML的语法并没有多少不同：
</p>

<pre caption="手册的使用例子">
&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;!DOCTYPE book SYSTEM "/dtd/book.dtd"&gt;

&lt;<i>book</i> link="example.xml"&gt;
&lt;title&gt;手册的使用例子&lt;/title&gt;

&lt;author...&gt;
  ...
&lt;/author&gt;

&lt;abstract&gt;
  ...
&lt;/abstract&gt;

&lt;!-- The content of this document is licensed under the CC-BY-SA license --&gt;
&lt;!-- See http://creativecommons.org/licenses/by-sa/1.0 --&gt;
&lt;license/&gt;

&lt;version&gt;...&lt;/version&gt;
&lt;date&gt;...&lt;/date&gt;
</pre>

<p>
目前，还没有实际的不同（除开用标签<c>&lt;book&gt;</c>代替标签<c>&lt;guide&gt;</c>）。和以前以一个单独的<c>&lt;chapter&gt;</c>开始文档不同，我们定义了一个<c>&lt;part&gt;</c>，这等同于手册的一个分散的部分：
</p>

<pre caption="定义一个part">
&lt;part&gt;
&lt;title&gt;第一篇&lt;/title&gt;
&lt;abstract&gt;
  ...
&lt;/abstract&gt;

<comment>(定义几个段落)</comment>
&lt;/part&gt;
</pre>

<p>
每个篇章都是由一个<c>&lt;title&gt;</c>和一个<c>&lt;abstract&gt;</c>实现的，其中后者给出这篇的简单介绍。
</p>

<p>
在每个篇章中，我们定义了不同的单独的<c>&lt;chapter&gt;</c>。每个段落都<e>必须</e>是一个单独的文档。因此，毫无疑问的要增加一个特别的标签（<c>&lt;include&gt;</c>）允许来包含分散的文档。
</p>

<pre caption="定义一个段落">
&lt;chapter&gt;
&lt;title&gt;第一段&lt;/title&gt;
&lt;abstract&gt;
  这是第一段的简单说明。
&lt;/abstract&gt;

  &lt;include href="path/to/chapter-one.xml"/&gt;

&lt;/chapter&gt;
</pre>

</body>
</section>
<section>
<title>设计不同的段落</title>
<body>

<p>
一个单独的段落结构如下所示：
</p>

<pre caption="段落的语法">
&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;!DOCTYPE sections SYSTEM "/dtd/book.dtd"&gt;

&lt;!--  The content of this document is licensed under the CC-BY-SA license --&gt;
&lt;!--  See http://creativecommons.org/licenses/by-sa/1.0 --&gt;

&lt;sections&gt;

<comment>(定义几个&lt;section&gt;和&lt;subsection&gt;)</comment>

&lt;/sections&gt;
</pre>

<p>
在每个段落中，你可以定义<c>&lt;section&gt;</c>（等同于Guide文档的chapter）和<c>&lt;subsection&gt;</c>（等同于Gudie文档的section）。
</p>

</body>
</section>
</chapter>

<chapter>
<title>资源</title>
<section>
<title>开始写作</title>
<body>

<p>
Guide文档是经特殊设计为“简单而传神”，这样开发者可以多花时间于写文档和少花时间于学习实际的XML语法。我们希望这个可以允许那些不是对文档异常敏锐的开发者开始写出高质量的Gentoo Linux文档。如果你愿意提供帮助（或者有关于这个文档的问题），请回复一条信息到<mail link="gentoo-doc@gentoo.org">gentoo-doc 邮件列表</mail>，告诉我们你想处理什么。祝你愉快！
</p>

</body>
</section>
</chapter>
</guide>

