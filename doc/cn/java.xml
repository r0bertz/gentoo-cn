<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/xsl/guide.xsl" ?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/tw/java.xml">
<title>Gentoo Java Guide</title>

<author title="Author and Editor">
  <mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>
<author title="Translator">
  <mail link="palatis@gentoo.org.tw">【Palatis】</mail>
</author>
<author title="Reviewer">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>

<license/>

<abstract>Gentoo 的 Java 使用和开发指南。</abstract>
<version>0.1.1</version>
<date>June 25, 2002</date>
<!-- Translate date : 19 April 2003 -->

<chapter>
<title>安装 JDK/JRE</title>
<section>
<title>导览</title>
<body>

<p>
Gentoo 提供几种不同的 JDK 和 JRE。预设的是 Blackdown JDK/JRE，因为它们不需注册就
可以免费 (啤酒) 下载。
</p>

<note>
如果 kaffe 变成了 JRE/JDK 的 "丢进来" 替代 (drop-in replacement)，它很有可能变成
我们的预设值。
</note>

<p>
Sun JDK/JRE 和 IBM JDK/JRE 一般都比较快，不过您得花更多功夫得到它们。它们要求您
下载之前先同意一份合约 (IBM 还要求您注册)。
</p>

<p>
我们写给 Sun 和 IBM JDK/JRE 的 ebuilds 会告诉您那里可以下载它们。
</p>

</body>
</section>
<section>
<title>安装 Sun/IBM JDK/JREs</title>
<body>

<p>
如果您执行 <c>emerge sun-jdk-1.3.1</c> 或 <c>emerge ibm-jdk-1.3.1</c>，您会被要
求自己下载压缩档。这是由於 Sun JDK/JRE (线上同意授权) 以及 IBM JDK/JRE 的授权方
法的关系。
</p>

<note>
我们也提供 sun-jdk-1.4.0 的 ebuild，不过不是所有的套件都能正常地跟 Java 1.4 工作
，所以您想使用 1.4.0 JDK 的话就得靠自己了。
</note>

<p>
您应该将档案下载至 <path>/usr/portage/distfiles</path>。下载完成后，您可以重新执
行 emerge 命令，然后 JDK/JRE 就会正确的被安装在 <path>/opt</path>。
</p>

</body>
</section>
</chapter>
<chapter>
<title>设定您的 JDK/JRE</title>
<section>
<title>导览</title>
<body>

<p>
Gentoo 拥有能够让您安装多个 JDK 和 JRE 而且不会打架的特异功能。不过有几点要注意
的，如下列所示。
</p>

<p>
使用 <c>java-config</c> 这个小工具，您可以设定系统的 Java 预设值，当然您得是根 
(root) 使用者。使用者也可以用 <c>java-config</c> 来设定他们自己的个人预设值，如
果和他们想使用系统预设值不同的 Java 的话。
</p>

</body>
</section>
<section>
<title>设定预设的 JDK/JRE</title>
<body>

<p>
执行 <c>java-config --list-available-vms</c> 可以列出目前系统上所有可用的 JRE 和
JDK，如下：
</p>

<pre caption="列出可用的虚拟机器">
[%1 ~] java-config --list-available-vms
[blackdown-jdk-1.3.1] Blackdown JDK 1.3.1 (/etc/env.d/java/20blackdown-jdk-1.3.1)
[blackdown-jre-1.3.1] Blackdown JRE 1.3.1 (/etc/env.d/java/20blackdown-jre-1.3.1)
[ibm-jdk-1.3.0] IBM JDK 1.3.0 (/etc/env.d/java/20ibm-jdk-1.3.0)
[ibm-jdk-1.3.1] IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
[ibm-jre-1.3.1] IBM JRE 1.3.1 (/etc/env.d/java/20ibm-jre-1.3.1)
[sun-jdk-1.4.0] Sun JDK 1.4.0 (/etc/env.d/java/20sun-jdk-1.4.0)
</pre>

<p>
在引号 <path>"[]"</path> 中的名称是虚拟机器的详细名称和 ID。您将这些 ID 送给 <c>
java-config --set-system-vm</c> 来设定想使用的虚拟机器，如下：
</p>

<pre caption="设定系统虚拟机器">
[#1 ~] java-config --set-system-vm=ibm-jdk-1.3.1
Now using IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
</pre>

<note>
您必须以根 (root) 使用者的身份来执行 --set-system-vm。
</note>

<p>
在您使用特定的虚拟机器 ID 执行 <c>java-config --set-system-vm</c> 之后，您必须重
新建立您的 /etc/profile.env，如下：
</p>

<pre caption="重建 /etc/profile.env" >
[#1 ~] env-update
</pre>

<p>
在这之后，您可能会想重新登入，或者重新引入 <path>/etc/profile</path> 环境设定。
</p>

<p>
如果您是普通使用者，您可以使用 <c>java-config --set-user-vm</c>，这将建立拥有所
有必须环境变数的 <path>$HOME/.gentoo/java-env</path> 档案。您可以普通的在壳 
(shell) 的启始命令稿中引入这个档案 (我的是 <path>$HOME/.zshenv</path>)。
</p>

</body>
</section>
<section>
<title>设定预设的 CLASSPATH</title>
<body>

<p>
<c>java-config</c>也可以用来设定系统预设的 CLASSPATH，当然也可以设定使用者个人的
预设 CLASSPATH。
</p>

<p>
首先，您可能会想看看有什么函式库可以放进您的 CLASSPATH，这样：
</p>

<pre caption="列出类别">
[%1 ~] java-config --list-available-packages
[ant] No description (/usr/share/ant/classpath.env)
[java-gnome] No description (/usr/share/java-gnome/classpath.env)
[java-gtk] No description (/usr/share/java-gtk/classpath.env)
[log4j] "" (/usr/share/log4j/package.env)
</pre>

<note>
这些套件目前还没有确切的叙述，这个是我们会再不久的将来加入的功能。
</note>

<p>
再次的，在於 <path>"[]"</path> 中的名称是您必须传送给 <c>java-config 
--set-system-classpath</c> 的 ID，所以：
</p>

<pre caption="设定类别目录">
java-config --set-system-classpath=log4j,java-gtk,java-gnome
</pre>

<note>
目前的目录 (.) 不会出现在系统类别目录中，它应该被加入根 (root) 使用者的登入设定
里。
</note>

<p>
再次的，您必须执行 <c>env-update</c> 以更新您的系统环境设定，而您可能也会想重新
登入或重新引入 <path>/etc/profile</path>。
</p>

<p>
对一般使用者，<c>java-config --set-user-classpath</c> 会建立 
<path>$HOME/.gentoo/java-env-classpath</path>，它会自动被 
<path>$HOME/.gentoo/java-env</path> 引入。
</p>

</body>
</section>
</chapter>
<chapter>
<title>更多资源</title>
<section>
<title>离线资源</title>
<body>

<ul>
  <li>java-config 的男人页 (man page)</li>
  <li><c>java-config --help</c></li>
  <li><path>/usr/bin/java-config</path> 命令稿本身</li>
</ul>

</body>
</section>
<section>
<title>线上资源</title>
<body>
<ul>
  <li>
    <uri link="http://lists.gentoo.org/pipermail/gentoo-dev/">gentoo-dev </uri>
    、<uri link="http://lists.gentoo.org/pipermail/gentoo-user/">gentoo-user
    </uri> 邮件列表存档
  </li>
  <li>irc.openprojects.net 上的 #gentoo 频道</li>
</ul>

</body>
</section>
</chapter>
<chapter>
<title>注意事项</title>
<section>
<title>大致上</title>
<body>

<p>
如果您使用某个 JRE 作为预设的虚拟机器，您可能不会永远有个顺手的 <c>javac</c> ，
除非您手动制作符号连结来解决这个问题。
</p>

<p>
如果可以用的话，Jikes 会被用来编译某些大型套件。我们希望以后能够使用 Jikes 来编
译所有和 java 有关的套件，所以某些 JDK 的相依性可以用 JRE 的来取代。
</p>

<p>
某些 Portage 版本，做 <c>emerge --world update</c> 的时候会安装 JDK ，不管您有没
有安装过它。这是个以知的臭虫，而且会在以后的 Portage 版本改进。
</p>

</body>
</section>
</chapter>
</guide>
