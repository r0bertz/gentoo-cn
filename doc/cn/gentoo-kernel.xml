<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/xsl/guide.xsl" ?>
<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/tw/gentoo-kernel.xml,v 1.6 2004/05/15 07:01:00 bennyc Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/zh_cn/gentoo-kernel.xml">
<title>Gentoo Linux Kernel Guide</title>
<author title="Author">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Contributor">
    <mail link="lostlogic@gentoo.org">Brandon Low</mail>
</author>
<author title="Editor">
    <mail link="carl@gentoo.org">Carl Anderson</mail>
</author>
<author title="Editor">
    <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Translator">
    <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>

<!-- Rev 1.6 by Benny -->

<abstract>
这份文件带你一览 Gentoo Portage 内所提供的 Linux 核心.
</abstract>

<license/>

<version>0.3</version>
<date>2004年02月09日</date>

<chapter>
<title>介绍</title>
<section>
<body>

<p>
就和 Gentoo Linux 其他东西一样, Gentoo 核心团队的哲学是带给你, 使用者, 更多选择
上的自由. 如果你看看 <c>emerge -s sources</c> 的输出, 你将会看到一大串可以选用的
清单. 在这份文件内, 我将会简单地为你介绍各种核心的目标, 以及所用的补钉(patch).
</p>

</body>
</section>
</chapter>

<chapter>
<title>选择, 第一部</title>
<section>
<title>gentoo-sources</title>
<body>

<p>
对於大部份的使用者来说, 我们将推荐你使用 <c>gentoo-sources</c>. 这份 
<c>gentoo-sources</c> 套件包含著特别针对效能而调整过的核心补钉, 让你可以在编译软
体的同时顺便可以听听音乐或是游览网页.
大部份对於 Gentoo 是新手的使用者应该没有体验过一边执行日常工作,一边从原始码编译
软体的系统.
你会发现使用 <c>vanilla-sources</c> (Kernel 官方在 
<uri>http://www.kernel.org</uri> 所发布的版本) 
进行软体编译时, 一边听音乐, 或是移动滑鼠将会让画面变得有些延迟.
</p>

<p>
<c>gentoo-sources</c> 包含著更新的 ACPI 子系统, 和 Con Kolivas 的高效能核心补钉
(<c>ck-sources</c>). 我们也支援 grSecurity (一套安全性相关的补钉,并解支援 ACLs),
EVMS(2)
(一个高弹性又可以简单的调整分割区大小的档案管理系统), JFS (IBM 的高效能档案系统
),最新 NTFS 驱动程式, 和更多更多.
</p>

<p>
因为 <c>gentoo-sources</c> 以全方面的效能为目标, 这份核心也非常适合执行游戏相关
的软体.
</p>

</body>
</section>
<section>
<title>vanilla-sources</title>
<body>

<p>
接下来所要介绍的 <c>vanilla-sources</c> 相信许多 Linux 使用者已经听过了.
就如我之前所介绍过的, 这个是从 <uri>http://www.kernel.org/</uri> 所发表的核心原
始档. 这份核心不是 Linus Torvalds 而是 Marcelo Tosatti 所维护的. Linus 是目前的
核心开发者, 但是他也只是一个普通人, 他把稳定的核心为些传给他所信赖的人. 所以 
Marcelo Tosatti 负责维护 Linux-2.4 系列, 而 Alan Cox 则负责维护 Linux-2.2 系列的
核心. Marcelo 一直以来都做著出色的维护, 让这些核心一直保持在最新的状态(如果非紧
急状况)和最新的硬体支援.
</p>

<p>
<c>vanilla-sources</c> 应该是目前最稳定的核心版本. 这个版本经过许多测试并且许多
其他核心也基础於它. 如果你不需要其他的核心支援, 那么你或许该选择 
<c>vanilla-sources</c>.
</p>

</body>
</section>
<section>
<title>development-sources</title>
<body>

<p>
<c>development-sources</c> 安装程序提供著稳定版的 Linux 2.6 核心。
和名字相反的是，这个核心已经完全稳定并且可以完成你的工作。
</p>

</body>
</section>
<section>
<title>gs-sources</title>
<body>

<p>
对於比较需要桌面互动效能次于稳定度和硬体支援的使用者, 可以参考我们的 
<c>gs-sources</c>. GS 代表著 Gentoo Stable (我们有创意吧?). 这份核心所用的补钉都
是特别针对最新的硬体调整和测试过的.
为了确保你的伺服器可以在你需要的时候上线. 这份核心虽然不像 <c>gentoo-sources</c>
般积极地进行效能调整, 但是可以保证的是和 vanilla 核心比起来的高效能.
虽然我们还无法确保他的稳定度, 但是我们有增加了相关的效能补钉.
</p>

<p>
这份核心提供的有最新的 ACPI 子系统, EVMS, ECC(HA Linux 系统所需), Encrypted Loop
back device, NTFS, Win4Lin 和 XFS. 它也包含了 IDE, ext 和多种网路卡的更新补钉.
</p>

<p>
换句话来说, 这份核心适合伺服器和 HA 系统.
</p>

<p>
以下为 USE 参数可用的补钉选项:
</p>

<table>
<tr>
  <th>参数</th><th>说明</th>
</tr>
<tr>
  <ti>crypt</ti><ti>套用 cryptographic 补钉</ti>
</tr>
</table>

</body>
</section>
<section>
<title>gentoo-test-sources</title>
<body>

<p>
<c>gentoo-test-sources</c> 可以说是 <c>gentoo-sources</c> 的前身.
但是它必须经过许多测试后才会成为下一版的 <c>gentoo-sources</c>.
<c>gentoo-sources</c> 所用的补钉会先被加到 <c>gentoo-test-sources</c> 进行测试.
如果你想要尝试最新的 <c>gentoo-sources</c> 以及补钉, 你应该使用 
<c>gentoo-test-sources</c>.
</p>

</body>
</section>
<section>
<title>hardened-sources</title>
<body>

<p>
<c>hardened-sources</c> 提供多种 Gentoo Hardened (如 LSM/SELinux 和 GRSecurity 
的支援)计画的补钉, 包括稳定度/安全性加 强. 关於更多资料, 请参考
<uri>http://www.gentoo.org/proj/en/hardened/</uri>.
</p>

<p>
以下为 USE 参数可用的补钉选项:
</p>

<table>
<tr>
  <th>参数</th><th>说明</th>
</tr>
<tr>
  <ti>selinux</ti><ti>更改 grSecurity 为 SELinux 支援</ti>
</tr>
</table>

</body>
</section>
<section>
<title>xfs-sources</title>
<body>

<p>
<c>xfs-sources</c> 包含著 EVMS, ACPI, grSecurity 和你应该已经猜测出来的, 从
XFS 开发团队所发表的最新 XFS 支援补钉. 如果你一定要知道, Gentoo LiveCD 也有使用
<c>xfs-sources</c>.
</p>

<p>
关於更多 XFS 的资料, 请参考 <uri>http://oss.sgi.com/projects/xfs/</uri>.
</p>

</body>
</section>
<section>
<title>硬体架构所依赖的核心</title>
<body>

<p>
<c>alpha-sources</c>, <c>hppa-sources</c>, <c>ia63-sources</c>, 
<c>mips-sources</c>, <c>ppc-sources</c> 和 <c>sparc-sources</c>
都和它们的名字一样, 依照个别的硬体架构所调整过的核心. 它们也包含著一些特别
针对硬体及功能所调整过的补钉.
</p>

</body>
</section>
<section>
<title>ppc-sources-benh</title>
<body>

<p>
<c>ppc-sources-benh</c> 跟 <c>ppc-sources</c> 核心比起来, 拥有更多的硬体支援.
但是它和 <c>ppc-sources</c> 比较起来算是在实验阶段.
</p>

</body>
</section>
<section>
<title>ppc-sources-crypto</title>
<body>

<p>
<c>ppc-sources-crypto</c> 提供 Gentoo Linux PPC 核心的 CryptoAPI 支援.
更多关於 CryptoAPI 可以到 <uri>http://www.kerneli.org/about/</uri> 查看.
</p>

</body>
</section>
<section>
<title>ppc-sources-dev</title>
<body>

<p>
<c>ppc-sources-dev</c> 为 <c>ppc-sources</c> 的开发版. 每份 <c>ppc-sources</c>
发表前都会先经过 <c>ppc-sources-dev</c> 这个阶段.
</p>

</body>
</section>
<section>
<title>compaq-sources</title>
<body>

<p>
<c>compaq-sources</c> 提供的是 RedHat 的 Alpha 架构核心. 由 Comapq 维护.
</p>

</body>
</section>
</chapter>

<chapter>
<title>选择, 第二部</title>
<section>
<body>

<p>
现在我将简略地介绍其他在 <path>sys-kernel/*-sources</path> 里面的核心.
你可以使用 <c>emerge -s sources</c> 查看. 让我按照顺序地来介绍它们.
</p>

</body>
</section>
<section>
<title>aa-sources</title>
<body>

<p>
首先, <c>aa-sources</c>. 这是利用 Andrea Arcangeli 的补钉套件所完成的.
Andrea 是一个另许多核心修改者为了不起的程式作者. 他的核心补钉有著有使以来最积极
的 VM (Virutal Memory,虚拟记忆) 补钉. 当我最后一次查看时 它也包含著 SGI 的
XFS 档案系统, 和 Ingo Mola 的 scheduler. (将会成为 Linux 2.6 的预设 scheduler).
</p>

<p>
它也提供了 User Mode Linux 支援 (请参考 <uri link="/doc/en/uml.xml">UML 
指南</uri>) 和 TUX 网页伺服器 (核心内建).
</p>

<p>
如果你使用其他核心时有关於记忆管理方面的问题, 请试试 <c>aa-sources</c>. 
如果你要最佳化你的系统上的记忆管理, 那么 <c>aa-sources</c> <e>绝对是</e>
你所想要的.
</p>

<p>
请参考
<uri>http://www.kernel.org/pub/linux/kernel/people/andrea/kernels/v2.4</uri>
关於更多关於这份核心的补钉.
</p>

</body>
</section>
<section>
<title>gaming-sources</title>
<body>

<p>
<c>gaming-sources</c> 是基础於 <c>ck-sources</c> 但是做过高效能的调整.
这份核心包含著最新的游戏相关硬体支援(显示卡,音效卡等等)
</p>

<p>
如果你是一个固执的玩家,那么就将是你的选择.
</p>

</body>
</section>
<section>
<title>grsec-sources</title>
<body>

<p>
<c>grsec-sources</c> 核心是针对最新的 GRSecurity 更新 (1.9以后的版本),包含著其他
安全性相关补钉,支援 PaX.
</p>

</body>
</section>
<section>
<title>mm-sources</title>
<body>

<p>
<c>mm-sources</c> 以 <c>development-sources</c> 为基础, 它也包含著 Andrew
Morton 的补钉套件. 它集合著多种其他的补钉, 包括 ext2/3 扩充属性, Access Control 
Lists, Page Table Sharing, Orlov Allocator, non-linear mapping behaviour 合一的
补钉套件.
</p>

<p>
如果你真的在边缘上游走, 认为 <c>development-sources</c> 很娘娘腔,
那就请尝试 <c>mm-sources</c>.
</p>

</body>
</section>
<section>
<title>openmosix-sources</title>
<body>

<p>
<c>openmosix-sources</c> 为支援 openMosix 系统的补钉套件. (就和 MOSIX 一样, 但是
是开放原始码). 关於更多资料, 请参考 <uri>http://www.openmosix.org</uri>.
</p>

</body>
</section>
<section>
<title>pac-sources</title>
<body>

<p>
<c>pac-sources</c> 核心为 Bernhard Rosenkraenzer(bero) 的核心补钉.
</p>

</body>
</section>
<section>
<title>planet-ccrma-sources</title>
<body>

<p>
这份核心包含著 Planet CCRMA (custom audio upgrade) 针对 Redhat Linux 调整过的补
钉.
</p>

<p>
关於更多资料可以到 <uri>http://ccrma-www.standford.edu/</uri> 找到.
</p>

</body>
</section>
<section>
<title>selinux-sources</title>
<body>

<p>
<c>selinux-sources</c> 使用的是来自 <uri>http://www.nsa.gov/selinux</uri> 所发表
的补钉. 这些特别注意安全性的补钉将支援著 LSM (Linux Security Modules) 和 Flask 
Security Architecture.
</p>

</body>
</section>
<section>
<title>usermode-sources</title>
<body>

<p>
<c>usermode-sources</c> 使用的是 User Mode Linux 核心补钉. 这份核心是特别设计给
让 Linux 可以在 Linux 下执行 Linux 的功能. User Mode Linux 的目的为测试和虚拟伺
服器支援. 关於更多惊人的功能以及稳定度请参考 
<uri>http://user-mode-linux.sourceforge.net</uri>.
</p>

<p>
关於更多关於 UML 和 Gentoo, 请参考 
<uri link="/doc/en/uml.xml">Gentoo UML 指南</uri>.
</p>

</body>
</section>
<section>
<title>win4lin-sources</title>
<body>

<p>
<c>win4lin-sources</c> 使用的是支援 userland win4lin 工具的补钉. 这份补钉可以让
Linux 在几乎没有影响速度的情况下执行 Microsoft Windows (TM) 的软体.
关於更多请参考 <uri>http://www.netraverse.com/</uri>.
</p>

</body>
</section>
<section>
<title>wolk-sources</title>
<body>

<p>
<c>wolk-sources</c> 包著来自 <uri>http://sourceforge.net/projects/wolk</uri> 的
核心. WOLK 为 <e>Working OverLoaded Linux Kernel</e> 的缩写, 也就是在超过负载的
核心下工作的意思. 这份核心包含著许多方面的补钉, 也以特别小心的方式加入核心. 这将
可以让你在编译时新增/减少任何一种编译时的补钉, 也几乎可以让任何补钉使用在这套核
心上.
</p>

<p>
如果你需要一种特别组合的补钉, 除了 WOLK 以外你应该找不到其他适合你的核心套件了.
</p>

</body>
</section>
</chapter>
</guide>
