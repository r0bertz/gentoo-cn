<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/xsl/guide.xsl" ?>
<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/new-upgrade-to-gentoo-1.4.xml,v 1.8 2004/04/11 10:52:16 cam Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/zh_cn/new-upgrade-to-gentoo-1.4.xml">

<title>Gentoo 1.4升级指南</title>

	<author title = "Author">
<mail link = "rac@gentoo.org">Robert Coie</mail>
</author>

	<author title = "Copy Editor">
<mail link = "avenj@gentoo.org">Jon Portnoy</mail>
</author>
        <author title = "Translator">
<mail link = "joanphan@gmail.com">Hans Joanphan</mail>
</author>

	<abstract>将旧的Gentoo升级到Gentoo 1.4的方法</abstract>
  <license/>
	<version>0.1</version>
	<date>2003年3月3日</date>



	<chapter>
		<title>开始之前</title>
		<section>
			<title>准备</title>
			<body>
				<p>与任何一次你的Gentoo核心部分的大升级一样，总有不可预见的问题常出现。因此在开始之前总要谨慎小心的备份所有重要的数据。如果可能，分配出一块足够的时间来进行这次升级，这样就不会感觉到时间总在催你。你机器上所有的软件都将需要重新编译一次。</p>
			</body>
		</section>
		<section>
			<title>其他选项</title>
			<body>
				<p>这不是升级系统的唯一方法。你可以在另一个分区安装一个新的1.4的系统，并重新使用一些你的系统配置。这种方法也有在应急时回到你的旧系统。你也可以决定简化而不是升级你的系统。如果你决定要升级系统，继续读下去。</p>
			</body>
		</section>
		<section>
			<title>一般的注意事项</title>
			<body>
				<p>不管什么时候代码列表是<c>emerge</c>命令时，最好先用<c>-p</c>或<c>--pretend</c>选项来试运行一下这个命令，以确保这个命令将会如你所期望的那样去做。</p>
			</body>
		</section>
	</chapter>
	<chapter>
		<title>升级</title>
		<section>
			<title>获得尽量最新的Portage</title>
			<body>
				<p>目前一些ebuilds的语法无法被旧版本的Portage识别。如果你没有一个版本高于2.0.44的Portage，先试试升级你的Portage。</p>
				<pre>
# <i>emerge sync</i>
# <i>emerge -u portage</i>
</pre>
				<note>如果你的Portage版本非常旧，你可能得到包含词组“unscriptable object”的错误信息。阅读在<path>/usr/portage/sys-apps/portage/files/README.RESCUE</path>中的使用说明。你安装后的Portage将会是最新的。</note>
</body></section>

		<section>
			<title>准备GCC共存</title>
			<body>
				<p>你将在这次升级中安装一个新版的GCC。版本低于2.95.3-r8的GCC没有设计为多版本的GCC共存。因此你必须升级你的GCC到至少2.95.3-r8版。这也会产生安装<c>gcc-config</c>软件包的副作用，这个软件包可以用来在已安装不同版本的GCC之间切换。</p>

				<pre>
# <i>emerge -u gcc</i>
</pre>

				<p>你现在可以检查一下是否gcc-config可以正常工作：</p>
				<pre>
# <i>gcc-config --get-current-profile</i>
</pre>
				<p>在大多数x86的系统上会返回i686-pc-linux-gnu-2.95.3。旧的系统可能会返回i586-pc-linux-gnu-2.95.3。</p>
			</body>
		</section>
		<section>
			<title>安装GCC 3</title>
			<body>
				<p>现在你可以在不损坏当前编译器的情况下安装一个新版的GCC了。看看<path>/usr/portage/sys-devel/gcc</path>，可以只到一个GCC的版本至少为3.2.1-r6。选择一个在你机器架构上的标记为稳定版的版本最高的GCC。想看看是否一个ebuild在你的机器架构上为稳定版，查看一下ebuild文件中的KEYWORDS。如果他在你的机器架构上前用一个~标记，说明它就是稳定的。假设3.2.2是目前最稳定的版本，然后执行下面命令：</p>
<pre>
# <i>emerge /usr/portage/sys-devel/gcc/gcc-3.2.2.ebuild</i>
</pre>
			</body>
		</section>
		<section>
			<title>改变配置文件</title>
			<body>
				<p>现在你需要改变两个系列的配置文件：你的gcc-config配置文件和你的Portage配置文件。</p>
				<pre>
# <i>cd /etc</i>
# <i>rm make.profile</i>
# <i>ln -s ../usr/portage/profiles/default-x86-1.4 make.profile</i> <codenote>用你机器的架构来代替"x86"</codenote>
</pre>

				<pre>
# <i>gcc-config --list-profiles</i> <codenote>注意你刚刚安装的那个版本，下面将用到它</codenote>
# <i>gcc-config i686-pc-linux-gnu-3.2.2</i> <codenote>用你上面注意到的那个版本替代</codenote>
</pre>
			</body>
		</section>
		<section>
			<title>重新编译工具链</title>
			<body>
				<p>现在你需要用你新的编译器来重新编译你的核心工具链。如果你在使用同一个shell，你需要安装gcc-config指导的运行<c>source /etc/profile</c>。然后使用你的新编译器安装glibc和binuitls：</p>
<pre>
# <i>emerge glibc binutils</i>
</pre>
				<warn>很可能你升级glibc是从2.2或者更低的版本到2.3。后面不要向下降级glibc，否则任何你用glibc编译的软件将不能工作，这也使得你的系统无法使用。</warn>
			</body>
		</section>
		<section>
			<title>用你的新编译器重新编译所有的东西</title>
			<body><p>现在你可以在你的机器上使用你的新编译器重新编译所有的东西：</p>
<pre>
# <i>emerge -e world</i>
</pre>
				<note>如果这个命令由于错误在某一点失败了，你可以使用<c>emerge --resume</c>从你断掉的地方继续编译。这个需要有Portage2.0.47或更新的版本。</note>
			</body>
		</section>
	</chapter>
</guide>



