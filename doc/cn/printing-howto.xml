<?xml version='1.0' encoding="UTF-8"?> 
<?xml-stylesheet type="text/xsl" href="/xsl/guide.xsl" ?>
<!-- $Header: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/printing-howto.xml,v 1.35 2004/05/08 14:24:03 swift Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/zh_cn/printing-howto.xml"> 

<title>Gentoo打印指南</title> 

<author title="Author"><!-- zhen@gentoo.org -->
  John P. Davis
</author>
<author title="Editor">
  <mail link="wleggette@gate.net">Wesley Leggette</mail>
</author>
<author title="Editor">
  <mail link="carl@gentoo.org">Carl Anderson</mail>
</author>
<author title="Editor">
  <mail link="lanius@gentoo.org">Heinrich Wendel</mail>
</author>
<author title="Editor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Copyeditor">
  <mail link="phil@thenexusproject.org">Phil Bordelon</mail>
</author> 
<author title="Translator">
  <mail link="joanphan@gmail.com">Hans Joanphan</mail>
</author>

<abstract>
Gentoo Linux的一份详细的打印指南，覆盖了本地打印和网络打印。
</abstract> 

<license/>

<version>1.12</version>
<date>2004年5月8日</date>

<chapter> 
<title>安装CUPS和foomatic</title> 
<section>
<body> 

<p>
由于一些了不起的程序，如CUPS（通用UNIX打印系统）和foomatic，在Gentoo Linux中设置打印是一件相对轻松的工作。这两个程序目前都在portage树中，并且对于最终用户来说，配置很容易。
</p> 

<p>
请注意，CUPS是跨桌面的，也就是说你可以在GNOME或者KDE下安装这些指导来使得你的打印机工作。也有其他的一些选择，如KDE的打印设置，但是我相信CUPS是最好设置，也是最好使用的。
</p>

<p>
在安装CUPS之前，往<path>/etc/make.conf</path>添加一些必要的USE标签更好。
</p>

<pre caption = "编辑/etc/make.conf">
<comment>在你已有的USE标签列表中添加cups，foomaticdb，ppds和usb（如果你使用一个USB打印机连接）</comment>
USE="cups foomaticdb ppds usb other_var1 other_var2"
</pre>

<p>
有关USE标签更多的信息，请参见Gentoo手册中的<uri link ="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=2&amp;chap=1">USE标签</uri>章节。
</p>

<pre caption = "安装必须的软件包">
# <i>emerge cups</i>
# <i>emerge foomatic </i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>设置内核模块</title> 
<section>
<title>概述</title>
<body>

<p>
既然必须的软件都已安装，我们该来安装打印机了。
</p>

<p>
根据你的打印机的连接方式，有必要在内核中启用并行端口或者USB端口打印机连接。
</p>

<note>
这只在本地打印中需要，如果你是通过samba服务器来打印，跳过这一节。
</note>

<note>
如果你不确定怎样编译内核，可以在<uri link="http://www.tldp.org/HOWTO/Kernel-HOWTO.html">内核指南</uri>（目前已过时，用作回顾了）找到特定的说明。确保你已经知道怎样在不重新编译和重新启动电脑下编译和安装新模块。这确实很节省时间。
</note>

</body>
</section>
<section>
<title>USB模块</title>
<body>

<p>
为启用USB打印机支持，到<c>USB support</c>中启用<c>Support for USB</c>和<c>USB Printer support</c>。这两个都以模块启用，将会在你的模块的文件夹中装上usbcore.o和printer.o。我建议使用模块，是这样就不必重启你的电脑。2.6内核的用户会在<c>Device Drivers</c>里找到这些选项。
</p>

<p>
内核编译好和重新启动你的电脑后，我们该加载这些必须的模块：
</p>

<pre caption = "加载USB模块">
# <i>modprobe usbcore</i> 

<comment>(适合2.4内核的用户：)</comment>
# <i>modprobe printer</i>
<comment>(适合2.6内核的用户：)</comment>
# <i>modprobe usblp</i>
</pre> 

<p>
模块都成功的加载后，插上打印机，检查<path>/var/log/messages</path>看是否它已被检测到。
</p> 

<note>
如果你使用了别的而不是sysklogd，你的内核日志文件将会不一样。
</note>

<pre caption = "检查内核信息">
# <i>tail /var/log/messages</i>
</pre> 

<p>
你应该看到类似以下的东西：
</p>

<pre caption = "/var/log/messages输出">
hub.c: USB new device connect on bus2/2, assigned device number 2 
printer.c: usblp0: USB bidirectional printer dev 2 if 0 alt 1 proto 2 vid 0x03F0 pid 0x1104
</pre>

</body>
</section> 
<section>
<title>并行端口模块</title>
<body>

<p>
为启动并行端口支持，到<c>Parallel port support</c>中启用<c>Parallel port support</c>和<c>PC-style hardware</c>。根据你的打印机，你也需要激活<c>Multi-IO cards (parallel and serial)</c>，<c>Support for foreign hardware</c>和<c>IEEE 1284 transfer mode</c>。然后到<c>Character devices</c>启用<c>Parallel Printer Support</c>。2.6内核的用户将会在<c>Device Drivers</c>找到这些选项。
</p>

<p>
内核编译好后，确认打印机已经插上，然后重启你的电脑。现在我们该加载必须的模块了：
</p>

<pre caption = "加载并行端口模块">
# <i>modprobe lp</i> <comment>(仅对2.6内核的用户)</comment>
# <i>modprobe parport</i> 
# <i>modprobe parport_pc</i>
</pre> 

<p>
内核都成功的加载后，检查<path>/var/log/messages</path>看是否他已被检测到。
</p> 

<note>
如果你使用了别的而不是sysklogd，你的内核日志文件将会不一样。
</note>

<pre caption = "检查内核信息">
# <i>tail /var/log/messages</i>
</pre> 

<p>
你应该看到类似以下的东西：
</p>

<pre caption = "/var/log/messages输出">
lp0: using parport0 (polling).
</pre>

</body>
</section>
<section>
<title>低级测试</title>
<body>

<p>
在用CUPS配置打印机之前，我们可以用一些低级命令来测试一下。
</p> 

<pre caption = "用cat测试打印机">
# <i>touch test.txt</i>
# <i>echo "Hello World" > test.txt</i>
# <i>cat test.txt > /dev/usb/lp0 </i>

<comment>或者，对于并行端口打印机：</comment>
# <i>cat test.txt > /dev/lp0 </i>
</pre>

<note>
一些打印机（如HP激光打印机）需要在文件的最后有一个^L（Control-L）来触发打印。虽然没有^L用cat可以成功，但是打印机会吸收掉数据，坐在那什么都不干。
</note>

</body>
</section>
</chapter>			

<chapter>
<title>特殊的打印机驱动</title> 
<section>
<body> 

<p>
在用foomatic生成PPD文件之前，可能有必要去找到适合你打印机的第三方驱动。如，Epson提供了<uri link="http://www.epkowa.co.jp/english/linux_e/linux.html">几款打印机驱动drivers</uri>用于开源操作系统。但是，包括Epson的，大部分这些驱动都不是开源的。
</p>

<p>
在Portage中有下面一些打印机驱动以ebuild形式存在：gimp-print，omni，hpijs，pnm2ppa。.
</p>

<p>
除开惠普的喷墨打印机，对于大部分打印机来说，你可以使用标准的Linux打印机驱动。访问<uri link="http://www.linuxprinting.org/printer_list.cgi">linuxprinting.org 打印机支持数据库</uri>可以找到你的的打印机的信息，并一定要阅读你下载下来的驱动的文档信息和版权信息。
</p> 

<impo>
如果你使用惠普喷墨打印机，必须安装<c>hpijs</c>打印机驱动。这个驱动可以处理所有的postscript解释使得惠普打印机正常工作。<c>hpijs</c>驱动是仅用于惠普喷墨打印机，但是在portage中存在，方便了不少。惠普的<c>hpijs</c>驱动的文档信息将会放在<path>/usr/share/doc/hpijs-&lt;version&gt;</path>里，作者<e>强烈</e>建议大家读读这个文档。
</impo>

<pre caption="安装hpijs">
# <i>emerge hpijs</i>
</pre>

<note>
如果你使用惠普的激光打印机，在GNOME打印系统有所支持。如果你使用一个非惠普喷墨打印机，你没有必要安装这个指定的打印机驱动。
</note>

</body>
</section>
</chapter>

<chapter>
<title>PPD文件的配置</title>
<section>
<body>

<p>
现在我们该来配置打印机和CUPS了。为了让你的打印机正确的解释Postscript，CUPS需要一个PPD（打印机Postscript定义）文件。生成一个PPD的最简单办法就是使用foomatic。
</p>

<note>
另外一种方法是从<uri link="http://www.linuxprinting.org">LinuxPrinting.org</uri>下载一个PPD文件。并将它放在<path>/usr/share/cups/model</path>里。如果你使用这种方法，你可以跳过这节的余下部分，从<uri link="#doc_chap5">CUPS的配置</uri>继续。
</note>

<p>
为让下面的命令有效，我们需要三点信息：你的打印机ID，打印机设备和打印机驱动（如果你需要安装如上的指定驱动，这里就指hpijs）。打印机的ID和驱动可以从foomatic的数据库中<c>查找到</c>，而打印设备文件是指你打印机所连接的设备块（如<path>file:/dev/lp0</path>，<path>file:/dev/usb/lp0</path>或者Samba打印机<path>smb://user:password@server/share</path>）。
</p>

<p>
在使用<c>foomatic-configure</c>之前，请记住要启动<c>cupsd</c>。
</p>

<pre caption = "启动cupsd">
# <i>/etc/init.d/cupsd start</i>
</pre>

<pre caption = "foomatic的一般用法">
<comment>(在$printer_model填上你的打印机型号和在$printer_ID填上打印机ID)</comment>
<comment>(用前面两个grep语句的输出填到最后的foomatic配置命令中)</comment>
# <i>grep $printer_model /usr/share/foomatic/db/source/printer/* </i>
# <i>grep $printer_ID /usr/share/foomatic/db/source/driver/* </i>
# <i>foomatic-configure -s cups -p $printer_model_number -c file:$print_device_path -n queue name -d driver </i>
</pre>

<p>
如果查找驱动失败，你可以在<uri link="http://www.linuxprinting.org">LinuxPrinting.org</uri>搜索你的打印机，并检查什么驱动是已知可以成功的，然后选择其中一个驱动安装：
</p>

<pre caption="安装PPD驱动">
<comment>(如果你有多个打印机，使用分开的队列名。否则用一个易于记忆的队列名，如“default”就够了)</comment>
# <i>foomatic-configure -s cups -p &lt;printer model&gt; -c file:&lt;printer device&gt; -n &lt;queue name&gt; -d &lt;driver&gt;</i>
</pre>

<p>
现在，这里有一个更具体的例子。下面这些代码是假设你有一个Epson Stylus Color 980打印机。当然，你应该用你实际的打印机型号代替它。
printer model.
</p>

<pre caption="Stylus Color 980打印机中foomatic的具体用法">
# <i>grep "Stylus Color 980" /usr/share/foomatic/db/source/printer/* </i>
<comment> 现在看看下面一行：</comment>
/usr/share/foomatic/db/source/printer/Epson-Stylus_Color_980.xml:   &lt;model>Stylus Color 980&lt;/model>
<comment> Epson-Stylus_Color_980是你打印机的ID。</comment>

# <i>grep Epson-Stylus_Color_980 /usr/share/foomatic/db/source/driver/* </i>
/usr/share/foomatic/db/source/driver/gimp-print-ijs.xml:  &lt;printer>&lt;id>printer/Epson-Stylus_Color_980&lt;/id>&lt;/printer>
<comment>这里你的打印机的驱动是gimp-print-ijs。</comment>

# <i>foomatic-configure -s cups -p Epson-Stylus_Color_980 -c file:/dev/lp0 -n Epson -d gimp-print-ijs </i>
</pre>

<impo>
如果你有问题，请在<uri link="http://www.linuxprinting.org/foomatic/USAGE">这里</uri>查看foomatic文档和<uri link="http://www.linuxprinting.org">linuxprinting.org</uri>的主页得到更多信息。
</impo>

</body> 
</section>
</chapter> 

<chapter> 
<title>CUPS的配置</title> 
<section>
<body> 

<p>
既然打印机本身已经配置耗了，现在必须来配置CUPS来处理打印队列。CUPS可以通过网页浏览器从打印服务器的631端口访问。
</p>

<p>
CUPS有一个给守护程序设好的配置文件，虽然不是必须的，最好应该修改一下。你可能想看一眼它，它就在<path>/etc/cups/cupsd.conf</path>。
</p>

<p>
对于那些要使用新的打印服务器来设定客户端的人，请查看客户端机器上的<path>/etc/cupsd/client.conf</path>，并将<c>ServerName</c>参数指向打印服务器的网络名称。
</p>

<pre caption = "将CUPS添加到默认运行级别中，并启动CUPS">
# <i>rc-update add cupsd default</i>
# <i>/etc/init.d/cupsd start</i>
</pre>

<p>
CUPS守护程序现在应该在运行中，这样就打开你喜欢的浏览器，指向<uri link="http://127.0.0.1:631">here</uri>，点击<c>Manage Printer</c>。这里你可以找到你新安装的打印机，配置打印机并测试一个页面。
</p> 

<note>
如果打印因为某些原因不能工作，到你的CUPS日志所在文件夹，仔细查看<c>error_log</c>。
</note>

</body> 
</section>
</chapter>

<chapter>
<title>配置程序打印使用CUPS.</title>
<section>
<title>概述</title>
<body>

<p>
当今大多数程序有一个自己的CUPS界面，因此你不需要改动任何东西，只是试试在这个程序中打印。
</p>

</body>
</section>
<section>
<title>GIMP软件</title>
<body>

<p>
开始之前，我们应该安装GIMP的CUPS打印扩展。
</p>

<pre caption="安装gimp-print">
# <i>emerge gimp-print </i>
</pre>

<p>
现在，打开GIMP，并打开一个已有的图片，或者只是一个空白图形。这都无关紧要，因为我们只要去看看菜单<c>File</c>。右击图片，到<c>File/Print</c>，打印的对话框应该出现；出现后，点击新打印机。如果你的打印机没有列出，输入你的打印机的名字，然后选择你的打印机的类型。好了，你现在设置在GIMP打印了。试试那些设置，但愿你玩得开心。
</p>

</body>
</section>
</chapter>

<chapter>
<title>使用Linux做一个和Windows兼容的打印服务器</title>
<section>
<body>

<p>
Linux可以做一个优秀的打印服务器，当然也可以作任何服务器。做这个我们首先要编辑<path>/etc/samba/smb.conf</path>来适合你的设置。文件<path>smb.conf</path>里包含了所有可以使你的Linux机器扮演一个面向任何Windows机器的Windows NT服务器的设置。下面我给出了一个非常实用的例子。根据需要编辑以适合你的环境。
</p>

<pre caption = "smb.conf样例">
[global]

workgroup = YOUR_WORKGROUP
server string = Gentoo Linux Server
encrypt passwords = True
security = user
smb passwd file = /etc/samba/private/smbpasswd
log file = /var/log/samba/log.%m
socket options = IPTOS_LOWDELAY TCP_NODELAY
domain master = Yes
local master = Yes
preferred master = Yes
os level = 65
dns proxy = No
name resolve order = lmhosts host bcast
bind interfaces only = True
interfaces = eth0
hosts deny = ALL
hosts allow = 192.168.1.4 127.0.0.1 (list of allow hosts here) 
debug level = 1
create mask = 0644
directory mask = 0755
level2 oplocks = True
read raw = no
write cache size = 262144

[printers]
comment = All Printer
path = /var/spool/samba
browseable = no
</pre>

<p>
如果你使用CUPS，打开<path>/etc/cups/mime.types</path>并去掉下面行的注释去掉：
</p>

<pre caption="去掉/etc/cups/mime.types下面一行的注释">
application/octet-stream
</pre>

<p>
在<path>/etc/cups/mime.convs</path>里对下一行同样做一下：
</p>

<pre caption="去掉/etc/cups/mime.convs下面一行的注释">
application/octet-stream application/vnd.cups-raw   0 -
</pre>

<p>
SAMBA配置好后，重新起动samba，到你的Windows机器上并安装一个网络打印机。这可是小菜一碟，你说呢?
</p>

</body>
</section>
</chapter>
</guide>
