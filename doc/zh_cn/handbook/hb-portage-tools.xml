<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_cn/handbook/hb-portage-tools.xml,v 1.3 2007/09/14 16:14:18 r0bertz Exp $ -->
<!-- English CVS version: 1.10 -->

<sections>

<abstract>
您可以通过Portage提供的一些附加工具为您的Gentoo旅程带来更多的快乐。通过下文的阅读你会学会如何使用dispatch-conf和其他的一些工具。
</abstract>

<version>1.5</version>
<date>2008-03-01</date>

<section>
<title>dispatch-conf</title>
<body>

<p>
<c>dispatch-conf</c>是一个帮助合并<path>._cfg0000_&lt;名称&gt;</path>文件的工具。<path>._cfg0000_&lt;名称&gt;</path>文件是由Portage在它要覆盖被CONFIG_PROTECT变量所保护的某个目录里的文件时建立的。
</p>

<p>
使用<c>dispatch-conf</c>能够在合并配置文件并升级更新的同时保持所有更新记录。<c>dispatch-conf</c>以RCS版本管理系统或是补丁的方式来保存配置文件间的差别。这意味着如果你在升级配置文件犯下错误时，你可以随时退回到你的配置文件的之前版本。
</p>

<p>
使用<c>dispatch-conf</c>，你可以保持配置文件原来的样子，或者使用新的配置文件，你还可以编辑当前文件或交互式地合并更新。除此之外，<c>dispatch-conf</c>还有一些很棒的特性：
</p>

<ul>
  <li>
    可以自动合并仅有注释变更的文件；
  </li>
  <li>
    可自动合并仅有空白符数量的不同的文件；
  </li>
</ul>

<p>
确定你先编辑了<path>/etc/dispatch-conf.conf</path>并创建了archive-dir变量设定的目录。
</p>

<pre caption="运行dispatch-conf">
# <i>dispatch-conf</i>
</pre>

<p>
当运行<c>dispatch-conf</c>的时候，程序会带你把每个改变了的配置文件挨个过一边。按<c>u</c>来用新配置文件更新（替换）现在的配置文件，然后继续处理下一个。按<c>z</c>来删除新配置文件，然后继续处理下一个。当处理完所有的配置文件之后，<c>dispatch-conf</c>就会退出。你也可以随时按<c>q</c>来退出。
</p>

<p>
更多信息，请查阅<c>dispatch-conf</c>手册页。它会告诉你交互式的合并新旧配置文件，编辑新配置文件，检查两个文件间的差异等等。
</p>

<pre caption="阅读dispatch-conf手册页">
$ <i>man dispatch-conf</i>
</pre>

</body>
</section>

<section>
<title>etc-update</title>
<body>

<p>
你也可以使用<c>etc-update</c>来合并配置文件。它不像<c>dispatch-conf</c>那样简单易用，功能也少，但是它也能提供交互式合并功能并且能自动合并一些简单的改变。
</p>

<p>
不过，和<c>dispatch-conf</c>不同的是，<c>etc-update</c><e>不</e>保留你的配置文件的旧版本。一旦你更新了文件，旧版本就永远丢失了。所以要非常小心，因为使用<c>etc-update</c>与使用<c>dispatch-conf</c>相比<e>明显</e>的不安全。
</p>

<pre caption="运行etc-update">
# <i>etc-update</i>
</pre>

<p>
在整合简单直观的更动后，系统会提示你一个需要更新的受保护的文件列表。在最底下会提示你可选的操作选项：
</p>

<pre caption="etc-update选项">
Please select a file to edit by entering the corresponding number.
              (-1 to exit) (-3 to auto merge all remaining files)
                           (-5 to auto-merge AND not use 'mv -i'):
</pre>

<p>
如果你输入<c>-1</c>，<c>etc-update</c>将直接退出且不执行任何变更。如果你输入<c>-3</c>或<c>-5</c>，所有列出的配置文件将被更新的版本覆盖。因此先选出无需自动升级的配置文件非常重要，而具体步骤也很简单，只需要输入在该配置文件左边显示的数字就可以了。
</p>

<p>
我们选择配置文件<path>/etc/pear.conf</path>作为范例:
</p>

<pre caption="更新指定的配置文件">
Beginning of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
<comment>[...]</comment>
End of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
1) Replace original with update
2) Delete update, keeping original as is
3) Interactively merge original with update
4) Show differences again
</pre>

<p>
现在你可以看到这两个文件之间的差别。如果你认为升级的配置文件可以正确无误的投入使用，输入<c>1</c>。如果你认为升级的配置文件是不必要的，或者它也没有提供任何新的或有用的信息，输入<c>2</c>。如果你想交互地升级你当前的配置文件，输入<c>3</c>。
</p>

<p>
这里我们就不再赘述交互性整合的详细过程。出于完整性的考虑，我们将列出在整合两个文件时可以用到的所有的命令。你将看到来自新旧文件的两行内容和一个提示符，在提示符这里你可以输入以下命令：
</p>

<pre caption="用交互方式配置时可以使用的命令">
ed:     编辑并使用两种版本，每一个版本都加上一个不同的标题头。
eb:     编辑并使用两个版本。
el:     编辑并使用左边的版本。
er:     编辑并使用右边的版本。
e:      编辑一个新的版本。
l:      使用左边的版本。
r:      使用右边的版本。
s:      包含相同的行。
v:      包含相同的行，并列出来源。
q:      退出。
</pre>

<p>
当你完成重要的配置文件的更新后，余下的其它配置文件你就可以采用自动更新的方法了。当无法再找到任何可更新的配置文件时<c>etc-update</c>将退出。
</p>

</body>
</section>

<section>
<title>quickpkg</title>
<body>

<p>
利用<c>quickpkg</c>可以对系统中已安装的包进行打包归档。这些归档文件可以作为预编译包使用。运行<c>quickpkg</c>非常简单：只要加上你想要制作的软件包的名字就可以了。
</p>

<p>
例如，要打包<c>curl</c>,<c>arts</c>,<c>procps</c>
</p>

<pre caption="quickpkg的使用范例">
# <i>quickpkg curl arts procps</i>
</pre>

<p>
预编译包会保存在<path>$PKGDIR/All</path>（默认为<path>/usr/portage/packages/All</path>)。指向这些包的符号链接保存在<path>$PKGDIR/&lt;category&gt;</path>中。
</p>

</body>
</section>

</sections>
