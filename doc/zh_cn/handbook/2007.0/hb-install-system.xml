<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/handbook/2007.0/hb-install-system.xml,v 1.4 2007/05/07 18:11:42 nightmorph
 Exp $ -->

<sections>

<version>8.0</version>
<date>2007-05-07</date>

<section>
<title>Chroot</title>
<subsection>
<title>挂载/proc和/dev文件系统</title>
<body>

<p>
将<path>/proc</path>文件系统挂载到<path>/mnt/gentoo/proc</path>，这样在chroot后的环境里安装时也可以获取内核提供的相关信息，然后以bind方式挂载<path>/dev</path>文件系统。
</p>

<pre caption="挂载/proc和/dev">
# <i>mount -t proc none /mnt/gentoo/proc</i>
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
</pre>

</body>
</subsection>
<subsection>
<title>进入新的系统环境</title>
<body>

<p>
现在所有的分区都已经被初始化，基本环境也已安装完毕，现在是到了该用<e>chroot</e>进入新安装环境的时候了。这意味着我们从当前安装环境（安装光盘或者其他安装介质）切换到你安装的系统里（也就是被初始化的分区）。

</p>

<p>
完成chroot有三步。首先我们用<c>chroot</c>把根文件系统从<path>/</path>（安装介质里）切换到<path>/mnt/gentoo</path>（在你的分区里）。然后我们使用<c>env-update</c>来建立新的环境，也就是创建新的环境变量。最后我们用<c>source</c>加载这些变量。
</p>

<pre caption="Chroot到新环境里">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
>>> Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
# <i>export PS1="(chroot) $PS1"</i>
</pre>

<p>
祝贺你！你现在已经在你自己的Gentoo Linux环境里了。当然这离安装完成还有段时间，因为我们可以看到安装指南还剩下很多章节呢 :-)
</p>

</body>
</subsection>
<subsection>
<title>生成Portage缓存</title>
<body>

<p>
现在Portage树已经装好了，但为了加快将来emerge的速度你现在应该建立Portage缓存。运行<c>emerge --metadata</c>来完成这一步。
</p>

<pre caption="生成Portage缓存">
# <i>emerge --metadata</i>
</pre>

</body>
</subsection>
</section>

<section id="configure_USE">
<title>配置USE变量</title>
<subsection>
<title>什么是USE变量？</title>
<body>

<p>
<c>USE</c>是Gentoo为用户提供的最具威力的变量之一。很多程序通过设置这个变量可以选择编译或者不编译某些可选的支持。例如，一些程序可以在编译时加入对gtk或是对qt的支持。其它的程序可以在编译时加入或不加入对于SSL的支持。有些程序甚至可以在编译时加入对帧缓冲的支持（svgalib）以取代X11（X服务器）。
</p>

<p>
大多数的发行版会使用尽可能多的支持特性编译它们的软件包，这既增加了软件的大小也减慢了启动时间，而这些还没有算上可能会涉及到的大量依赖性问题。Gentoo可以让你自己定义软件编译的选项，而这正是<c>USE</c>要做的事。
</p>

<p>
在<c>USE</c>变量里你可以定义关键字，这些关键字对应相应的编译选项。比如，<e>ssl</e>会让程序在编译时加入对它的支持。<e>-X</e>会移除其对于X服务器的支持（注意前面的减号）。<e>gnome gtk -kde -qt3 -qt4</e>将会在你编译软件的时候添加对gnome（和gtk）的支持，并且移除对kde（和qt）的支持，这可以让你的系统尽可能多的为GNOME做优化。
</p>

</body>
</subsection>
<subsection>
<title>修改USE变量</title>
<body>

<warn>
假设你打算使用我们提供的预编译软件包（GRP套件）那就不要对USE变量做任何修改。在装完你所需要的软件包以后就可以更改USE变量了。如果忽略这个警告你的系统将会有麻烦！
</warn>

<p>
默认的<c>USE</c>设置位于<path>/etc/make.profile/make.defaults</path>文件里。所有你放在<path>/etc/make.conf</path>里的<c>USE</c>都会根据默认设置重新计算。如果你添加了一些<c>USE</c>的设置，它会被增加到默认的列表里。如果你删除了一些<c>USE</c>设置（通过放一个减号到它前面），它将被从默认的列表里移除（如果它确实在默认列表里的话）。<e>绝对不</e>要改变<path>/etc/make.profile</path>目录里的任何东西，它会在你更新Portage的时候被覆盖掉！
</p>

<p>
关于<c>USE</c>的详解你可以在Gentoo手册的第二部分，<uri link="?part=2&amp;chap=2">USE标记</uri>里找到。对于USE标记的详细介绍可以查看你的系统里<path>/usr/portage/profiles/use.desc</path>。
</p>

<pre caption="查看可用的USE标记">
# <i>less /usr/portage/profiles/use.desc</i>
<comment>(你可用用方向键来滚动，按'q'键退出)</comment>
</pre>

<p>
作为一个例子，我们展示一个基于KDE的系统并带有DVD、ALSA以及光盘刻录支持的<c>USE</c>设置：
</p>

<pre caption="打开/etc/make.conf">
# <i>nano -w /etc/make.conf</i>
</pre>

<pre caption="USE设置">
USE="-gtk -gnome qt3 qt4 kde dvd alsa cdr"
</pre>

</body>
</subsection>
</section>
</sections>
